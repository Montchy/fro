{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIMGState = getIMGState;\nvar _extractImageStyleProps = _interopRequireDefault(require(\"./extractImageStyleProps\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getIMGState({\n  error,\n  alt,\n  altColor,\n  source,\n  containerStyle,\n  concreteDimensions,\n  initialDimensions,\n  objectFit,\n  onError\n}) {\n  if (error) {\n    return {\n      type: 'error',\n      alt,\n      altColor,\n      source,\n      error,\n      containerStyle,\n      dimensions: concreteDimensions !== null && concreteDimensions !== void 0 ? concreteDimensions : initialDimensions\n    };\n  }\n  if (concreteDimensions != null) {\n    return {\n      type: 'success',\n      alt,\n      altColor,\n      source,\n      onError,\n      containerStyle,\n      imageStyle: (0, _extractImageStyleProps.default)(containerStyle, objectFit),\n      dimensions: concreteDimensions\n    };\n  }\n  return {\n    type: 'loading',\n    alt,\n    altColor,\n    source,\n    containerStyle,\n    dimensions: initialDimensions\n  };\n}","map":{"version":3,"names":["_extractImageStyleProps","_interopRequireDefault","require","getIMGState","error","alt","altColor","source","containerStyle","concreteDimensions","initialDimensions","objectFit","onError","type","dimensions","imageStyle","default"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/react-native-render-html/lib/commonjs/elements/getIMGState.ts"],"sourcesContent":["import type {\n  UseIMGElementStateProps,\n  IMGElementState,\n  IMGElementStateBase,\n  IMGElementStateError,\n  IMGElementStateSuccess,\n  IMGElementStateLoading\n} from './img-types';\nimport extractImageStyleProps from './extractImageStyleProps';\nimport { ImageDimensions } from '../shared-types';\n\ninterface GetStateProps<C> extends Omit<IMGElementStateBase, 'dimensions'> {\n  concreteDimensions: C;\n  error: Error | null;\n  initialDimensions: ImageDimensions;\n  objectFit: UseIMGElementStateProps['objectFit'];\n  onError?: (e: Error) => void;\n}\n\nexport function getIMGState(\n  props: GetStateProps<ImageDimensions>\n): IMGElementStateError | IMGElementStateSuccess;\nexport function getIMGState(\n  props: GetStateProps<null | ImageDimensions>\n): IMGElementState;\nexport function getIMGState({\n  error,\n  alt,\n  altColor,\n  source,\n  containerStyle,\n  concreteDimensions,\n  initialDimensions,\n  objectFit,\n  onError\n}: GetStateProps<any>): IMGElementState {\n  if (error) {\n    return {\n      type: 'error',\n      alt,\n      altColor,\n      source,\n      error,\n      containerStyle,\n      dimensions: concreteDimensions ?? initialDimensions\n    };\n  }\n  if (concreteDimensions != null) {\n    return {\n      type: 'success',\n      alt,\n      altColor,\n      source,\n      onError,\n      containerStyle,\n      imageStyle: extractImageStyleProps(containerStyle, objectFit),\n      dimensions: concreteDimensions\n    } as IMGElementStateSuccess;\n  }\n  return {\n    type: 'loading',\n    alt,\n    altColor,\n    source,\n    containerStyle,\n    dimensions: initialDimensions\n  } as IMGElementStateLoading;\n}\n"],"mappings":";;;;;;AAQA,IAAAA,uBAAA,GAAAC,sBAAA,CAAAC,OAAA;;;;;;AAiBO,SAASC,WAATA,CAAqB;EAC1BC,KAD0B;EAE1BC,GAF0B;EAG1BC,QAH0B;EAI1BC,MAJ0B;EAK1BC,cAL0B;EAM1BC,kBAN0B;EAO1BC,iBAP0B;EAQ1BC,SAR0B;EAS1BC;AAT0B,CAArB,EAUiC;EACtC,IAAIR,KAAJ,EAAW;IACT,OAAO;MACLS,IAAI,EAAE,OADD;MAELR,GAFK;MAGLC,QAHK;MAILC,MAJK;MAKLH,KALK;MAMLI,cANK;MAOLM,UAAU,EAAEL,kBAAF,aAAEA,kBAAF,cAAEA,kBAAF,GAAwBC;IAP7B,CAAP;EASD;EACD,IAAID,kBAAkB,IAAI,IAA1B,EAAgC;IAC9B,OAAO;MACLI,IAAI,EAAE,SADD;MAELR,GAFK;MAGLC,QAHK;MAILC,MAJK;MAKLK,OALK;MAMLJ,cANK;MAOLO,UAAU,EAAE,IAAAf,uBAAA,CAAAgB,OAAA,EAAuBR,cAAvB,EAAuCG,SAAvC,CAPP;MAQLG,UAAU,EAAEL;IARP,CAAP;EAUD;EACD,OAAO;IACLI,IAAI,EAAE,SADD;IAELR,GAFK;IAGLC,QAHK;IAILC,MAJK;IAKLC,cALK;IAMLM,UAAU,EAAEJ;EANP,CAAP;AAQD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}