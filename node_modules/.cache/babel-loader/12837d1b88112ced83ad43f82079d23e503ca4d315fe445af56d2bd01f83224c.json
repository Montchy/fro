{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport color from 'color';\nimport { useInternalTheme } from '../../core/theming';\nimport Text from '../Typography/Text';\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => <List.Subheader>My List Title</List.Subheader>;\n *\n * export default MyComponent;\n * ```\n */\nconst ListSubheader = _ref => {\n  let {\n    style,\n    theme: overrideTheme,\n    maxFontSizeMultiplier,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(overrideTheme);\n  const textColor = theme.isV3 ? theme.colors.onSurfaceVariant : color(theme.colors.text).alpha(0.54).rgb().string();\n  const font = theme.isV3 ? theme.fonts.bodyMedium : theme.fonts.medium;\n  return /*#__PURE__*/React.createElement(Text, _extends({\n    variant: \"bodyMedium\",\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, rest, {\n    style: [styles.container, {\n      color: textColor,\n      ...font\n    }, style]\n  }));\n};\nListSubheader.displayName = 'List.Subheader';\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13\n  }\n});\nexport default ListSubheader;","map":{"version":3,"names":["React","StyleSheet","color","useInternalTheme","Text","ListSubheader","_ref","style","theme","overrideTheme","maxFontSizeMultiplier","rest","textColor","isV3","colors","onSurfaceVariant","text","alpha","rgb","string","font","fonts","bodyMedium","medium","createElement","_extends","variant","numberOfLines","styles","container","displayName","create","paddingHorizontal","paddingVertical"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/react-native-paper/src/components/List/ListSubheader.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, TextStyle } from 'react-native';\n\nimport color from 'color';\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => <List.Subheader>My List Title</List.Subheader>;\n *\n * export default MyComponent;\n * ```\n */\nconst ListSubheader = ({\n  style,\n  theme: overrideTheme,\n  maxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(overrideTheme);\n\n  const textColor = theme.isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n\n  const font = theme.isV3 ? theme.fonts.bodyMedium : theme.fonts.medium;\n\n  return (\n    <Text\n      variant=\"bodyMedium\"\n      numberOfLines={1}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      {...rest}\n      style={[\n        styles.container,\n        {\n          color: textColor,\n          ...font,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nListSubheader.displayName = 'List.Subheader';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default ListSubheader;\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAoBC,UAAU,QAAmB,cAAc;AAE/D,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,OAAOC,IAAI,MAAM,oBAAoB;AAiBrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAGC,IAAA,IAKT;EAAA,IALU;IACrBC,KAAK;IACLC,KAAK,EAAEC,aAAa;IACpBC,qBAAqB;IACrB,GAAGC;EACE,CAAC,GAAAL,IAAA;EACN,MAAME,KAAK,GAAGL,gBAAgB,CAACM,aAAa,CAAC;EAE7C,MAAMG,SAAS,GAAGJ,KAAK,CAACK,IAAI,GACxBL,KAAK,CAACM,MAAM,CAACC,gBAAgB,GAC7Bb,KAAK,CAACM,KAAK,CAACM,MAAM,CAACE,IAAI,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EAEvD,MAAMC,IAAI,GAAGZ,KAAK,CAACK,IAAI,GAAGL,KAAK,CAACa,KAAK,CAACC,UAAU,GAAGd,KAAK,CAACa,KAAK,CAACE,MAAM;EAErE,oBACEvB,KAAA,CAAAwB,aAAA,CAACpB,IAAI,EAAAqB,QAAA;IACHC,OAAO,EAAC,YAAY;IACpBC,aAAa,EAAE,CAAE;IACjBjB,qBAAqB,EAAEA;EAAsB,GACzCC,IAAI;IACRJ,KAAK,EAAE,CACLqB,MAAM,CAACC,SAAS,EAChB;MACE3B,KAAK,EAAEU,SAAS;MAChB,GAAGQ;IACL,CAAC,EACDb,KAAK;EACL,EACH,CAAC;AAEN,CAAC;AAEDF,aAAa,CAACyB,WAAW,GAAG,gBAAgB;AAE5C,MAAMF,MAAM,GAAG3B,UAAU,CAAC8B,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAEF,eAAe5B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}