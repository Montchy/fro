{"ast":null,"code":"var _jsxFileName = \"/Users/amelieploil/Desktop/Displomtest/Kinsky-Fe/kinskyfe/src/Components/AlwaysActive/LeftBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftBar = () => {\n  _s();\n  // State to manage the hover effect\n  const [isHovered, setIsHovered] = useState(false);\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n      style: [styles.buttons, isHovered && styles.hoveredButton],\n      onPressIn: () => setIsHovered(true),\n      onPressOut: () => setIsHovered(false),\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: \"test 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(LeftBar, \"FPQn8a98tPjpohC7NUYORQR8GJE=\");\n_c = LeftBar;\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'top',\n    alignItems: 'center',\n    width: 80,\n    backgroundColor: 'rgba(250,228,181,1)',\n    height: 900\n  },\n  buttons: {\n    padding: 10,\n    backgroundColor: 'transparent' // Default background\n  },\n  hoveredButton: {\n    backgroundColor: 'rgba(246,203,108,1)' // Hover effect background\n  }\n});\nexport default LeftBar;\nvar _c;\n$RefreshReg$(_c, \"LeftBar\");","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","jsxDEV","_jsxDEV","LeftBar","_s","isHovered","setIsHovered","style","styles","container","children","buttons","hoveredButton","onPressIn","onPressOut","fileName","_jsxFileName","lineNumber","columnNumber","_c","create","flexDirection","justifyContent","alignItems","width","backgroundColor","height","padding","$RefreshReg$"],"sources":["/Users/amelieploil/Desktop/Displomtest/Kinsky-Fe/kinskyfe/src/Components/AlwaysActive/LeftBar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst LeftBar = () => {\n    // State to manage the hover effect\n    const [isHovered, setIsHovered] = useState(false);\n\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity\n                style={[styles.buttons, isHovered && styles.hoveredButton]}\n                onPressIn={() => setIsHovered(true)}\n                onPressOut={() => setIsHovered(false)}\n            >\n                <Text>test 1</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'column',\n        justifyContent: 'top',\n        alignItems: 'center',\n        width: 80,\n        backgroundColor: 'rgba(250,228,181,1)',\n        height: 900,\n    },\n    buttons: {\n        padding: 10,\n        backgroundColor: 'transparent', // Default background\n    },\n    hoveredButton: {\n        backgroundColor: 'rgba(246,203,108,1)', // Hover effect background\n    },\n});\n\nexport default LeftBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,IAAI,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACIM,OAAA,CAACL,IAAI;IAACU,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,eAC1BR,OAAA,CAACH,gBAAgB;MACbQ,KAAK,EAAE,CAACC,MAAM,CAACG,OAAO,EAAEN,SAAS,IAAIG,MAAM,CAACI,aAAa,CAAE;MAC3DC,SAAS,EAAEA,CAAA,KAAMP,YAAY,CAAC,IAAI,CAAE;MACpCQ,UAAU,EAAEA,CAAA,KAAMR,YAAY,CAAC,KAAK,CAAE;MAAAI,QAAA,eAEtCR,OAAA,CAACJ,IAAI;QAAAY,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEf,CAAC;AAACd,EAAA,CAfID,OAAO;AAAAgB,EAAA,GAAPhB,OAAO;AAiBb,MAAMK,MAAM,GAAGR,UAAU,CAACoB,MAAM,CAAC;EAC7BX,SAAS,EAAE;IACPY,aAAa,EAAE,QAAQ;IACvBC,cAAc,EAAE,KAAK;IACrBC,UAAU,EAAE,QAAQ;IACpBC,KAAK,EAAE,EAAE;IACTC,eAAe,EAAE,qBAAqB;IACtCC,MAAM,EAAE;EACZ,CAAC;EACDf,OAAO,EAAE;IACLgB,OAAO,EAAE,EAAE;IACXF,eAAe,EAAE,aAAa,CAAE;EACpC,CAAC;EACDb,aAAa,EAAE;IACXa,eAAe,EAAE,qBAAqB,CAAE;EAC5C;AACJ,CAAC,CAAC;AAEF,eAAetB,OAAO;AAAC,IAAAgB,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}