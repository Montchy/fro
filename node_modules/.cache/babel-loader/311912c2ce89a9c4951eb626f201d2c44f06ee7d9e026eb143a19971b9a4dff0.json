{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LongSizeCSSPropertyValidator = void 0;\nvar _LongCSSPropertyValidator = require(\"./LongCSSPropertyValidator\");\nclass LongSizeCSSPropertyValidator extends _LongCSSPropertyValidator.LongCSSPropertyValidator {\n  computeSize(value, unit) {\n    switch (unit) {\n      case '%':\n        return \"\".concat(value, \"%\");\n      case 'px':\n        return value;\n      case 'cm':\n      case 'in':\n      case 'mm':\n      case 'pc':\n      case 'pt':\n        return value * this.config.absoluteLengthUnitsMultiplicators[unit];\n      case 'em':\n        return this.computeEmSize(value);\n      case 'ex':\n        // This is an approximation.\n        return this.computeEmSize(value * 0.63);\n      case 'rem':\n        return this.config.rootFontSize * value;\n    }\n    return null;\n  }\n  computeEmSize(value) {\n    return this.config.rootFontSize * value;\n  }\n  splitValueAndUnit(value) {\n    const match = /^(\\d*\\.?\\d*)\\s*(cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|%)$/g.exec(value);\n    if (match === null) {\n      return null;\n    }\n    return [Number(match[1]), match[2]];\n  }\n  normalizeRawInlineCSSValue(value) {\n    if (value === '0') {\n      return 0;\n    }\n    if (value === 'auto') {\n      return value;\n    }\n    const split = this.splitValueAndUnit(value);\n    if (split) {\n      return this.computeSize(split[0], split[1]);\n    }\n    return null;\n  }\n  normalizeNativeValue(value) {\n    return this.normalizeInlineCSSValue(value);\n  }\n}\nexports.LongSizeCSSPropertyValidator = LongSizeCSSPropertyValidator;","map":{"version":3,"names":["_LongCSSPropertyValidator","require","LongSizeCSSPropertyValidator","LongCSSPropertyValidator","computeSize","value","unit","concat","config","absoluteLengthUnitsMultiplicators","computeEmSize","rootFontSize","splitValueAndUnit","match","exec","Number","normalizeRawInlineCSSValue","split","normalizeNativeValue","normalizeInlineCSSValue"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/@native-html/css-processor/lib/commonjs/validators/LongSizeCSSPropertyValidator.ts"],"sourcesContent":["import { CSSLengthUnit } from '../config';\nimport { LongCSSPropertyValidator } from './LongCSSPropertyValidator';\nimport { CSSPropertyModel } from './types';\n\nexport class LongSizeCSSPropertyValidator<\n  C extends CSSPropertyModel\n> extends LongCSSPropertyValidator<C, number | string> {\n  protected computeSize(\n    value: number,\n    unit: CSSLengthUnit\n  ): number | string | null {\n    switch (unit) {\n      case '%':\n        return `${value}%`;\n      case 'px':\n        return value;\n      case 'cm':\n      case 'in':\n      case 'mm':\n      case 'pc':\n      case 'pt':\n        return value * this.config.absoluteLengthUnitsMultiplicators[unit];\n      case 'em':\n        return this.computeEmSize(value);\n      case 'ex':\n        // This is an approximation.\n        return this.computeEmSize(value * 0.63);\n      case 'rem':\n        return this.config.rootFontSize * value;\n    }\n    return null;\n  }\n\n  protected computeEmSize(value: number) {\n    return this.config.rootFontSize * value;\n  }\n\n  protected splitValueAndUnit(value: string): [number, CSSLengthUnit] | null {\n    const match =\n      /^(\\d*\\.?\\d*)\\s*(cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|%)$/g.exec(\n        value\n      );\n    if (match === null) {\n      return null;\n    }\n    return [Number(match[1]), match[2] as CSSLengthUnit];\n  }\n\n  normalizeRawInlineCSSValue(value: string) {\n    if (value === '0') {\n      return 0;\n    }\n    if (value === 'auto') {\n      return value;\n    }\n    const split = this.splitValueAndUnit(value);\n    if (split) {\n      return this.computeSize(split[0], split[1]);\n    }\n    return null;\n  }\n\n  normalizeNativeValue(value: string | number) {\n    return this.normalizeInlineCSSValue(value);\n  }\n}\n"],"mappings":";;;;;;AACA,IAAAA,yBAAA,GAAAC,OAAA;AAGO,MAAMC,4BAAN,SAEGF,yBAAA,CAAAG,wBAFH,CAEgD;EAC3CC,WAAWA,CACnBC,KADmB,EAEnBC,IAFmB,EAGK;IACxB,QAAQA,IAAR;MACE,KAAK,GAAL;QACE,UAAAC,MAAA,CAAUF,KAAM;MAClB,KAAK,IAAL;QACE,OAAOA,KAAP;MACF,KAAK,IAAL;MACA,KAAK,IAAL;MACA,KAAK,IAAL;MACA,KAAK,IAAL;MACA,KAAK,IAAL;QACE,OAAOA,KAAK,GAAG,KAAKG,MAAL,CAAYC,iCAAZ,CAA8CH,IAA9C,CAAf;MACF,KAAK,IAAL;QACE,OAAO,KAAKI,aAAL,CAAmBL,KAAnB,CAAP;MACF,KAAK,IAAL;QACE;QACA,OAAO,KAAKK,aAAL,CAAmBL,KAAK,GAAG,IAA3B,CAAP;MACF,KAAK,KAAL;QACE,OAAO,KAAKG,MAAL,CAAYG,YAAZ,GAA2BN,KAAlC;IAjBJ;IAmBA,OAAO,IAAP;EACD;EAESK,aAAaA,CAACL,KAAD,EAAgB;IACrC,OAAO,KAAKG,MAAL,CAAYG,YAAZ,GAA2BN,KAAlC;EACD;EAESO,iBAAiBA,CAACP,KAAD,EAAgD;IACzE,MAAMQ,KAAK,GACT,sEAAsEC,IAAtE,CACET,KADF,CADF;IAIA,IAAIQ,KAAK,KAAK,IAAd,EAAoB;MAClB,OAAO,IAAP;IACD;IACD,OAAO,CAACE,MAAM,CAACF,KAAK,CAAC,CAAD,CAAN,CAAP,EAAmBA,KAAK,CAAC,CAAD,CAAxB,CAAP;EACD;EAEDG,0BAA0BA,CAACX,KAAD,EAAgB;IACxC,IAAIA,KAAK,KAAK,GAAd,EAAmB;MACjB,OAAO,CAAP;IACD;IACD,IAAIA,KAAK,KAAK,MAAd,EAAsB;MACpB,OAAOA,KAAP;IACD;IACD,MAAMY,KAAK,GAAG,KAAKL,iBAAL,CAAuBP,KAAvB,CAAd;IACA,IAAIY,KAAJ,EAAW;MACT,OAAO,KAAKb,WAAL,CAAiBa,KAAK,CAAC,CAAD,CAAtB,EAA2BA,KAAK,CAAC,CAAD,CAAhC,CAAP;IACD;IACD,OAAO,IAAP;EACD;EAEDC,oBAAoBA,CAACb,KAAD,EAAyB;IAC3C,OAAO,KAAKc,uBAAL,CAA6Bd,KAA7B,CAAP;EACD;AA1DoD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}