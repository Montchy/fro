{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { Dimensions, View, StyleSheet, Platform, Pressable } from 'react-native';\nimport { getTooltipPosition } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport { addEventListener } from '../../utils/addEventListener';\nimport Portal from '../Portal/Portal';\nimport Text from '../Typography/Text';\n/**\n * Tooltips display informative text when users hover over, focus on, or tap an element.\n *\n * Plain tooltips, when activated, display a text label identifying an element, such as a description of its function. Tooltips should include only short, descriptive text and avoid restating visible UI text.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { IconButton, Tooltip } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Tooltip title=\"Selected Camera\">\n *     <IconButton icon=\"camera\" selected size={24} onPress={() => {}} />\n *   </Tooltip>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Tooltip = _ref => {\n  let {\n    children,\n    enterTouchDelay = 500,\n    leaveTouchDelay = 1500,\n    title,\n    theme: themeOverrides,\n    titleMaxFontSizeMultiplier,\n    ...rest\n  } = _ref;\n  const isWeb = Platform.OS === 'web';\n  const theme = useInternalTheme(themeOverrides);\n  const [visible, setVisible] = React.useState(false);\n  const [measurement, setMeasurement] = React.useState({\n    children: {},\n    tooltip: {},\n    measured: false\n  });\n  const showTooltipTimer = React.useRef([]);\n  const hideTooltipTimer = React.useRef([]);\n  const childrenWrapperRef = React.useRef();\n  const touched = React.useRef(false);\n  React.useEffect(() => {\n    return () => {\n      if (showTooltipTimer.current.length) {\n        showTooltipTimer.current.forEach(t => clearTimeout(t));\n        showTooltipTimer.current = [];\n      }\n      if (hideTooltipTimer.current.length) {\n        hideTooltipTimer.current.forEach(t => clearTimeout(t));\n        hideTooltipTimer.current = [];\n      }\n    };\n  }, []);\n  React.useEffect(() => {\n    const subscription = addEventListener(Dimensions, 'change', () => setVisible(false));\n    return () => subscription.remove();\n  }, []);\n  const handleOnLayout = _ref2 => {\n    let {\n      nativeEvent: {\n        layout\n      }\n    } = _ref2;\n    childrenWrapperRef.current.measure((_x, _y, width, height, pageX, pageY) => {\n      setMeasurement({\n        children: {\n          pageX,\n          pageY,\n          height,\n          width\n        },\n        tooltip: {\n          ...layout\n        },\n        measured: true\n      });\n    });\n  };\n  const handleTouchStart = () => {\n    if (hideTooltipTimer.current.length) {\n      hideTooltipTimer.current.forEach(t => clearTimeout(t));\n      hideTooltipTimer.current = [];\n    }\n    if (isWeb) {\n      let id = setTimeout(() => {\n        touched.current = true;\n        setVisible(true);\n      }, enterTouchDelay);\n      showTooltipTimer.current.push(id);\n    } else {\n      touched.current = true;\n      setVisible(true);\n    }\n  };\n  const handleTouchEnd = () => {\n    touched.current = false;\n    if (showTooltipTimer.current.length) {\n      showTooltipTimer.current.forEach(t => clearTimeout(t));\n      showTooltipTimer.current = [];\n    }\n    let id = setTimeout(() => {\n      setVisible(false);\n      setMeasurement({\n        children: {},\n        tooltip: {},\n        measured: false\n      });\n    }, leaveTouchDelay);\n    hideTooltipTimer.current.push(id);\n  };\n  const mobilePressProps = {\n    onPress: React.useCallback(() => {\n      if (touched.current) {\n        return null;\n      } else {\n        var _children$props$onPre, _children$props;\n        if (children.props.disabled) return null;\n        return (_children$props$onPre = (_children$props = children.props).onPress) === null || _children$props$onPre === void 0 ? void 0 : _children$props$onPre.call(_children$props);\n      }\n    }, [children.props]),\n    onLongPress: () => handleTouchStart(),\n    onPressOut: () => handleTouchEnd(),\n    delayLongPress: enterTouchDelay\n  };\n  const webPressProps = {\n    onHoverIn: () => {\n      var _children$props$onHov, _children$props2;\n      handleTouchStart();\n      (_children$props$onHov = (_children$props2 = children.props).onHoverIn) === null || _children$props$onHov === void 0 ? void 0 : _children$props$onHov.call(_children$props2);\n    },\n    onHoverOut: () => {\n      var _children$props$onHov2, _children$props3;\n      handleTouchEnd();\n      (_children$props$onHov2 = (_children$props3 = children.props).onHoverOut) === null || _children$props$onHov2 === void 0 ? void 0 : _children$props$onHov2.call(_children$props3);\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, visible && /*#__PURE__*/React.createElement(Portal, null, /*#__PURE__*/React.createElement(View, {\n    onLayout: handleOnLayout,\n    style: [styles.tooltip, {\n      backgroundColor: theme.isV3 ? theme.colors.onSurface : theme.colors.tooltip,\n      ...getTooltipPosition(measurement, children),\n      borderRadius: theme.roundness,\n      ...(measurement.measured ? styles.visible : styles.hidden)\n    }],\n    testID: \"tooltip-container\"\n  }, /*#__PURE__*/React.createElement(Text, {\n    accessibilityLiveRegion: \"polite\",\n    numberOfLines: 1,\n    selectable: false,\n    variant: \"labelLarge\",\n    style: {\n      color: theme.colors.surface\n    },\n    maxFontSizeMultiplier: titleMaxFontSizeMultiplier\n  }, title))), /*#__PURE__*/React.createElement(Pressable, _extends({\n    ref: childrenWrapperRef,\n    style: styles.pressContainer\n  }, isWeb ? webPressProps : mobilePressProps), /*#__PURE__*/React.cloneElement(children, {\n    ...rest,\n    ...(isWeb ? webPressProps : mobilePressProps)\n  })));\n};\nTooltip.displayName = 'Tooltip';\nconst styles = StyleSheet.create({\n  tooltip: {\n    alignSelf: 'flex-start',\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    height: 32,\n    maxHeight: 32\n  },\n  visible: {\n    opacity: 1\n  },\n  hidden: {\n    opacity: 0\n  },\n  pressContainer: {\n    ...(Platform.OS === 'web' && {\n      cursor: 'default'\n    })\n  }\n});\nexport default Tooltip;","map":{"version":3,"names":["React","Dimensions","View","StyleSheet","Platform","Pressable","getTooltipPosition","useInternalTheme","addEventListener","Portal","Text","Tooltip","_ref","children","enterTouchDelay","leaveTouchDelay","title","theme","themeOverrides","titleMaxFontSizeMultiplier","rest","isWeb","OS","visible","setVisible","useState","measurement","setMeasurement","tooltip","measured","showTooltipTimer","useRef","hideTooltipTimer","childrenWrapperRef","touched","useEffect","current","length","forEach","t","clearTimeout","subscription","remove","handleOnLayout","_ref2","nativeEvent","layout","measure","_x","_y","width","height","pageX","pageY","handleTouchStart","id","setTimeout","push","handleTouchEnd","mobilePressProps","onPress","useCallback","_children$props$onPre","_children$props","props","disabled","call","onLongPress","onPressOut","delayLongPress","webPressProps","onHoverIn","_children$props$onHov","_children$props2","onHoverOut","_children$props$onHov2","_children$props3","createElement","Fragment","onLayout","style","styles","backgroundColor","isV3","colors","onSurface","borderRadius","roundness","hidden","testID","accessibilityLiveRegion","numberOfLines","selectable","variant","color","surface","maxFontSizeMultiplier","_extends","ref","pressContainer","cloneElement","displayName","create","alignSelf","justifyContent","paddingHorizontal","maxHeight","opacity","cursor"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/react-native-paper/src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Dimensions,\n  View,\n  LayoutChangeEvent,\n  StyleSheet,\n  Platform,\n  Pressable,\n  ViewStyle,\n} from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { getTooltipPosition, Measurement } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport { addEventListener } from '../../utils/addEventListener';\nimport Portal from '../Portal/Portal';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Tooltip reference element. Needs to be able to hold a ref.\n   */\n  children: React.ReactElement;\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay?: number;\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay?: number;\n  /**\n   * Tooltip title\n   */\n  title: string;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Tooltips display informative text when users hover over, focus on, or tap an element.\n *\n * Plain tooltips, when activated, display a text label identifying an element, such as a description of its function. Tooltips should include only short, descriptive text and avoid restating visible UI text.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { IconButton, Tooltip } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Tooltip title=\"Selected Camera\">\n *     <IconButton icon=\"camera\" selected size={24} onPress={() => {}} />\n *   </Tooltip>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Tooltip = ({\n  children,\n  enterTouchDelay = 500,\n  leaveTouchDelay = 1500,\n  title,\n  theme: themeOverrides,\n  titleMaxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const isWeb = Platform.OS === 'web';\n\n  const theme = useInternalTheme(themeOverrides);\n  const [visible, setVisible] = React.useState(false);\n\n  const [measurement, setMeasurement] = React.useState({\n    children: {},\n    tooltip: {},\n    measured: false,\n  });\n  const showTooltipTimer = React.useRef<NodeJS.Timeout[]>([]);\n  const hideTooltipTimer = React.useRef<NodeJS.Timeout[]>([]);\n  const childrenWrapperRef = React.useRef() as React.MutableRefObject<View>;\n  const touched = React.useRef(false);\n\n  React.useEffect(() => {\n    return () => {\n      if (showTooltipTimer.current.length) {\n        showTooltipTimer.current.forEach((t) => clearTimeout(t));\n        showTooltipTimer.current = [];\n      }\n\n      if (hideTooltipTimer.current.length) {\n        hideTooltipTimer.current.forEach((t) => clearTimeout(t));\n        hideTooltipTimer.current = [];\n      }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const subscription = addEventListener(Dimensions, 'change', () =>\n      setVisible(false)\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  const handleOnLayout = ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n    childrenWrapperRef.current.measure(\n      (_x, _y, width, height, pageX, pageY) => {\n        setMeasurement({\n          children: { pageX, pageY, height, width },\n          tooltip: { ...layout },\n          measured: true,\n        });\n      }\n    );\n  };\n\n  const handleTouchStart = () => {\n    if (hideTooltipTimer.current.length) {\n      hideTooltipTimer.current.forEach((t) => clearTimeout(t));\n      hideTooltipTimer.current = [];\n    }\n\n    if (isWeb) {\n      let id = setTimeout(() => {\n        touched.current = true;\n        setVisible(true);\n      }, enterTouchDelay) as unknown as NodeJS.Timeout;\n      showTooltipTimer.current.push(id);\n    } else {\n      touched.current = true;\n      setVisible(true);\n    }\n  };\n\n  const handleTouchEnd = () => {\n    touched.current = false;\n    if (showTooltipTimer.current.length) {\n      showTooltipTimer.current.forEach((t) => clearTimeout(t));\n      showTooltipTimer.current = [];\n    }\n\n    let id = setTimeout(() => {\n      setVisible(false);\n      setMeasurement({ children: {}, tooltip: {}, measured: false });\n    }, leaveTouchDelay) as unknown as NodeJS.Timeout;\n    hideTooltipTimer.current.push(id);\n  };\n\n  const mobilePressProps = {\n    onPress: React.useCallback(() => {\n      if (touched.current) {\n        return null;\n      } else {\n        if (children.props.disabled) return null;\n        return children.props.onPress?.();\n      }\n    }, [children.props]),\n    onLongPress: () => handleTouchStart(),\n    onPressOut: () => handleTouchEnd(),\n    delayLongPress: enterTouchDelay,\n  };\n\n  const webPressProps = {\n    onHoverIn: () => {\n      handleTouchStart();\n      children.props.onHoverIn?.();\n    },\n    onHoverOut: () => {\n      handleTouchEnd();\n      children.props.onHoverOut?.();\n    },\n  };\n\n  return (\n    <>\n      {visible && (\n        <Portal>\n          <View\n            onLayout={handleOnLayout}\n            style={[\n              styles.tooltip,\n              {\n                backgroundColor: theme.isV3\n                  ? theme.colors.onSurface\n                  : theme.colors.tooltip,\n                ...getTooltipPosition(measurement as Measurement, children),\n                borderRadius: theme.roundness,\n                ...(measurement.measured ? styles.visible : styles.hidden),\n              },\n            ]}\n            testID=\"tooltip-container\"\n          >\n            <Text\n              accessibilityLiveRegion=\"polite\"\n              numberOfLines={1}\n              selectable={false}\n              variant=\"labelLarge\"\n              style={{ color: theme.colors.surface }}\n              maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n            >\n              {title}\n            </Text>\n          </View>\n        </Portal>\n      )}\n      {/* Need the xxPressProps in both places */}\n      <Pressable\n        ref={childrenWrapperRef}\n        style={styles.pressContainer}\n        {...(isWeb ? webPressProps : mobilePressProps)}\n      >\n        {React.cloneElement(children, {\n          ...rest,\n          ...(isWeb ? webPressProps : mobilePressProps),\n        })}\n      </Pressable>\n    </>\n  );\n};\n\nTooltip.displayName = 'Tooltip';\n\nconst styles = StyleSheet.create({\n  tooltip: {\n    alignSelf: 'flex-start',\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    height: 32,\n    maxHeight: 32,\n  },\n  visible: {\n    opacity: 1,\n  },\n  hidden: {\n    opacity: 0,\n  },\n  pressContainer: {\n    ...(Platform.OS === 'web' && { cursor: 'default' }),\n  } as ViewStyle,\n});\n\nexport default Tooltip;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}