{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LongCSSPropertyValidator = void 0;\nvar _GenericPropertyValidator = require(\"./GenericPropertyValidator\");\nclass LongCSSPropertyValidator extends _GenericPropertyValidator.GenericCSSPropertyValidator {\n  constructor(params) {\n    super(params, false);\n  }\n  /**\n   * Normalize a rule value from inline CSS styles.\n   *\n   * @param value - The CSS property value to test.\n   * @returns The normalized value, or null if normalization failed.\n   */\n\n  normalizeInlineCSSValue(value) {\n    if (typeof value !== 'string') {\n      return value;\n    }\n    return this.normalizeRawInlineCSSValue(value);\n  }\n\n  /**\n   * Normalize a mixed value from a @{link MixedStyleDeclaration}.\n   *\n   * @param value\n   */\n  normalizeNativeValue(value) {\n    return value;\n  }\n}\nexports.LongCSSPropertyValidator = LongCSSPropertyValidator;","map":{"version":3,"names":["_GenericPropertyValidator","require","LongCSSPropertyValidator","GenericCSSPropertyValidator","constructor","params","normalizeInlineCSSValue","value","normalizeRawInlineCSSValue","normalizeNativeValue"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/@native-html/css-processor/lib/commonjs/validators/LongCSSPropertyValidator.ts"],"sourcesContent":["import { GenericCSSPropertyValidator } from './GenericPropertyValidator';\nimport { CSSPropertyValidatorParams, CSSPropertyModel } from './types';\n\nexport abstract class LongCSSPropertyValidator<\n  C extends CSSPropertyModel = any,\n  N = any\n> extends GenericCSSPropertyValidator<C> {\n  constructor(params: CSSPropertyValidatorParams<C>) {\n    super(params, false);\n  }\n\n  /**\n   * Normalize a rule value from inline CSS styles.\n   *\n   * @param value - The CSS property value to test.\n   * @returns The normalized value, or null if normalization failed.\n   */\n  normalizeInlineCSSValue(value: N | string): N | null {\n    if (typeof value !== 'string') {\n      return value;\n    }\n    return this.normalizeRawInlineCSSValue(value);\n  }\n\n  abstract normalizeRawInlineCSSValue(value: string): N | null;\n\n  /**\n   * Normalize a mixed value from a @{link MixedStyleDeclaration}.\n   *\n   * @param value\n   */\n  normalizeNativeValue(value: N): N | null {\n    return value;\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,yBAAA,GAAAC,OAAA;AAGO,MAAeC,wBAAf,SAGGF,yBAAA,CAAAG,2BAHH,CAGkC;EACvCC,WAAWA,CAACC,MAAD,EAAwC;IACjD,MAAMA,MAAN,EAAc,KAAd;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;EACEC,uBAAuBA,CAACC,KAAD,EAA8B;IACnD,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7B,OAAOA,KAAP;IACD;IACD,OAAO,KAAKC,0BAAL,CAAgCD,KAAhC,CAAP;EACD;;EAID;AACF;AACA;AACA;AACA;EACEE,oBAAoBA,CAACF,KAAD,EAAqB;IACvC,OAAOA,KAAP;EACD;AA3BsC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}