{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\nconst _excluded = [\"source\", \"onHTMLLoaded\", \"onTTreeChange\", \"onDocumentMetadataLoaded\", \"contentWidth\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = RenderHTML;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _RenderHTMLDebug = _interopRequireDefault(require(\"./RenderHTMLDebug\"));\nvar _TRenderEngineProvider = _interopRequireDefault(require(\"./TRenderEngineProvider\"));\nvar _RenderHTMLConfigProvider = _interopRequireDefault(require(\"./RenderHTMLConfigProvider\"));\nvar _RenderHTMLSource = _interopRequireDefault(require(\"./RenderHTMLSource\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Render HTML text in native views!\n *\n * @remarks If your application uses many instances of this component, you\n * should share the render engine across those instances via the\n * {@link TRenderEngineProvider} and {@link RenderHTMLConfigProvider}\n * components, and render the HTML with {@link RenderHTMLSource} instead. That\n * should significantly increase performance.\n *\n * @warning It should never be a child of a React Native `Text` element, as the\n * layout will break.\n *\n * @public\n */\nfunction RenderHTML(props) {\n  const {\n      source,\n      onHTMLLoaded,\n      onTTreeChange,\n      onDocumentMetadataLoaded,\n      contentWidth\n    } = props,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  return /*#__PURE__*/_react.default.createElement(_RenderHTMLDebug.default, props, /*#__PURE__*/_react.default.createElement(_TRenderEngineProvider.default, otherProps, /*#__PURE__*/_react.default.createElement(_RenderHTMLConfigProvider.default, otherProps, /*#__PURE__*/_react.default.createElement(_RenderHTMLSource.default, {\n    source,\n    onHTMLLoaded,\n    onTTreeChange,\n    onDocumentMetadataLoaded,\n    contentWidth\n  }))));\n}","map":{"version":3,"names":["_react","_interopRequireDefault","require","_RenderHTMLDebug","_TRenderEngineProvider","_RenderHTMLConfigProvider","_RenderHTMLSource","RenderHTML","props","source","onHTMLLoaded","onTTreeChange","onDocumentMetadataLoaded","contentWidth","otherProps","_objectWithoutProperties","_excluded","default","createElement"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/react-native-render-html/lib/commonjs/RenderHTML.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\nimport { RenderHTMLProps } from './shared-types';\nimport RenderHTMLDebug from './RenderHTMLDebug';\nimport TRenderEngineProvider from './TRenderEngineProvider';\nimport RenderHTMLConfigProvider from './RenderHTMLConfigProvider';\nimport RenderHTMLSource from './RenderHTMLSource';\n\n/**\n * Render HTML text in native views!\n *\n * @remarks If your application uses many instances of this component, you\n * should share the render engine across those instances via the\n * {@link TRenderEngineProvider} and {@link RenderHTMLConfigProvider}\n * components, and render the HTML with {@link RenderHTMLSource} instead. That\n * should significantly increase performance.\n *\n * @warning It should never be a child of a React Native `Text` element, as the\n * layout will break.\n *\n * @public\n */\nexport default function RenderHTML(props: RenderHTMLProps): ReactElement {\n  const {\n    source,\n    onHTMLLoaded,\n    onTTreeChange,\n    onDocumentMetadataLoaded,\n    contentWidth,\n    ...otherProps\n  } = props;\n  return (\n    <RenderHTMLDebug {...props}>\n      <TRenderEngineProvider {...otherProps}>\n        <RenderHTMLConfigProvider {...otherProps}>\n          {React.createElement(RenderHTMLSource, {\n            source,\n            onHTMLLoaded,\n            onTTreeChange,\n            onDocumentMetadataLoaded,\n            contentWidth\n          })}\n        </RenderHTMLConfigProvider>\n      </TRenderEngineProvider>\n    </RenderHTMLDebug>\n  );\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,gBAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,sBAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,yBAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,iBAAA,GAAAL,sBAAA,CAAAC,OAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASK,UAATA,CAAoBC,KAApB,EAA0D;EACvE,MAAM;MACJC,MADI;MAEJC,YAFI;MAGJC,aAHI;MAIJC,wBAJI;MAKJC;IALI,IAOFL,KAPJ;IAMKM,UAAA,GAAAC,wBAAA,CACDP,KAPJ,EAAAQ,SAAA;EAQA,oBACEhB,MAAA,CAAAiB,OAAA,CAAAC,aAAA,CAACf,gBAAA,CAAAc,OAAD,EAAqBT,KAArB,eACER,MAAA,CAAAiB,OAAA,CAAAC,aAAA,CAACd,sBAAA,CAAAa,OAAD,EAA2BH,UAA3B,eACEd,MAAA,CAAAiB,OAAA,CAAAC,aAAA,CAACb,yBAAA,CAAAY,OAAD,EAA8BH,UAA9B,eACGd,MAAA,CAAAiB,OAAA,CAAMC,aAAN,CAAoBZ,iBAAA,CAAAW,OAApB,EAAsC;IACrCR,MADqC;IAErCC,YAFqC;IAGrCC,aAHqC;IAIrCC,wBAJqC;IAKrCC;EALqC,CAAtC,CADH,CADF,CADF,CADF;AAeD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}