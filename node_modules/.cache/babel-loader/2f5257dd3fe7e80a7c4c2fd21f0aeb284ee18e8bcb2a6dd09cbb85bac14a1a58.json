{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TStylesMerger = exports.emptyProcessedPropsReg = void 0;\nvar _cssProcessor = _interopRequireWildcard(require(\"@native-html/css-processor\"));\nvar _TStyles = require(\"./TStyles\");\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nconst emptyProcessedPropsReg = new _cssProcessor.CSSProcessedProps();\nexports.emptyProcessedPropsReg = emptyProcessedPropsReg;\nfunction mapMixedStyleRecordToCSSProcessedPropsReg(processor, styles) {\n  let regStyles = {};\n  for (const key in styles) {\n    regStyles[key] = processor.compileStyleDeclaration(styles[key]);\n  }\n  return regStyles;\n} // Specificity hierarchy, in descending order:\n// 1. Inline styles\n// 2. ID (idsStyles)\n// 3. Classes (classesStyles)\n// 4. Element name (tagsStyles)\n// 5. Attribute styles (styles derived from attributes)\n// 6. Default element styles\n// 7. Inherited styles (baseFontStyles)\n\nclass TStylesMerger {\n  constructor(config, modelRegistry, cssProcessorConfig) {\n    _defineProperty(this, \"processor\", void 0);\n    _defineProperty(this, \"tagsStyles\", void 0);\n    _defineProperty(this, \"classesStyles\", void 0);\n    _defineProperty(this, \"idsStyles\", void 0);\n    _defineProperty(this, \"enableCSSInlineProcessing\", void 0);\n    _defineProperty(this, \"enableUserAgentStyles\", void 0);\n    _defineProperty(this, \"modelRegistry\", void 0);\n    this.processor = new _cssProcessor.default(cssProcessorConfig);\n    this.modelRegistry = modelRegistry;\n    this.classesStyles = mapMixedStyleRecordToCSSProcessedPropsReg(this.processor, config.classesStyles);\n    this.tagsStyles = mapMixedStyleRecordToCSSProcessedPropsReg(this.processor, config.tagsStyles);\n    this.idsStyles = mapMixedStyleRecordToCSSProcessedPropsReg(this.processor, config.idsStyles);\n    this.enableCSSInlineProcessing = config.enableCSSInlineProcessing;\n    this.enableUserAgentStyles = config.enableUserAgentStyles;\n  }\n  compileInlineCSS(inlineCSS) {\n    return this.processor.compileInlineCSS(inlineCSS);\n  }\n  compileStyleDeclaration(styleDeclaration) {\n    return this.processor.compileStyleDeclaration(styleDeclaration);\n  }\n  buildStyles(inlineStyle, parentStyles, descriptor) {\n    var _this$tagsStyles, _this$idsStyles, _ref, _ref2, _model$getMixedUAStyl, _model$getUADerivedSt, _model$mixedUAStyles;\n    const ownInlinePropsReg = this.enableCSSInlineProcessing && inlineStyle ? this.compileInlineCSS(inlineStyle) : null;\n    const model = descriptor.tagName ? this.modelRegistry.getElementModelFromTagName(descriptor.tagName) : null;\n    const userTagOwnProps = (_this$tagsStyles = this.tagsStyles[descriptor.tagName]) !== null && _this$tagsStyles !== void 0 ? _this$tagsStyles : null;\n    const userIdOwnProps = (_this$idsStyles = this.idsStyles[descriptor.id]) !== null && _this$idsStyles !== void 0 ? _this$idsStyles : null;\n    const classes = descriptor.classes;\n    const userClassesOwnPropsList = classes.map(c => this.classesStyles[c] || null);\n    const dynamicPropsFromAttributes = this.enableUserAgentStyles ? (_ref = (_ref2 = (model === null || model === void 0 ? void 0 : (_model$getMixedUAStyl = model.getMixedUAStyles) === null || _model$getMixedUAStyl === void 0 ? void 0 : _model$getMixedUAStyl.call(model, descriptor, descriptor.domNode)) || null) !== null && _ref2 !== void 0 ? _ref2 : model === null || model === void 0 ? void 0 : (_model$getUADerivedSt = model.getUADerivedStyleFromAttributes) === null || _model$getUADerivedSt === void 0 ? void 0 : _model$getUADerivedSt.call(model, descriptor.attributes, descriptor.markers)) !== null && _ref !== void 0 ? _ref : null : null;\n    const userAgentTagProps = this.enableUserAgentStyles ? (_model$mixedUAStyles = model === null || model === void 0 ? void 0 : model.mixedUAStyles) !== null && _model$mixedUAStyles !== void 0 ? _model$mixedUAStyles : null : null; // Latest properties will override former properties.\n\n    const mergedOwnProps = emptyProcessedPropsReg.merge(userAgentTagProps && this.processor.compileStyleDeclaration(userAgentTagProps), dynamicPropsFromAttributes && this.processor.compileStyleDeclaration(dynamicPropsFromAttributes), userTagOwnProps, ...userClassesOwnPropsList, userIdOwnProps, ownInlinePropsReg);\n    return new _TStyles.TStyles(mergedOwnProps, parentStyles);\n  }\n}\nexports.TStylesMerger = TStylesMerger;","map":{"version":3,"names":["_cssProcessor","_interopRequireWildcard","require","_TStyles","emptyProcessedPropsReg","CSSProcessedProps","mapMixedStyleRecordToCSSProcessedPropsReg","processor","styles","regStyles","key","compileStyleDeclaration","TStylesMerger","constructor","config","modelRegistry","cssProcessorConfig","_defineProperty","default","classesStyles","tagsStyles","idsStyles","enableCSSInlineProcessing","enableUserAgentStyles","compileInlineCSS","inlineCSS","styleDeclaration","buildStyles","inlineStyle","parentStyles","descriptor","_this$tagsStyles","_this$idsStyles","_ref","_ref2","_model$getMixedUAStyl","_model$getUADerivedSt","_model$mixedUAStyles","ownInlinePropsReg","model","tagName","getElementModelFromTagName","userTagOwnProps","userIdOwnProps","id","classes","userClassesOwnPropsList","map","c","dynamicPropsFromAttributes","getMixedUAStyles","call","domNode","getUADerivedStyleFromAttributes","attributes","markers","userAgentTagProps","mixedUAStyles","mergedOwnProps","merge","TStyles"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/@native-html/transient-render-engine/lib/commonjs/styles/TStylesMerger.ts"],"sourcesContent":["import CSSProcessor, {\n  CSSProcessedProps,\n  CSSProcessorConfig,\n  MixedStyleDeclaration\n} from '@native-html/css-processor';\nimport HTMLModelRegistry from '../model/HTMLModelRegistry';\nimport { TNodeDescriptor } from '../tree/tree-types';\nimport { TStyles } from './TStyles';\nimport { StylesConfig } from './types';\n\nexport const emptyProcessedPropsReg: CSSProcessedProps =\n  new CSSProcessedProps();\n\nfunction mapMixedStyleRecordToCSSProcessedPropsReg(\n  processor: CSSProcessor,\n  styles?: Record<string, MixedStyleDeclaration>\n): Record<string, CSSProcessedProps> {\n  let regStyles: Record<string, CSSProcessedProps> = {};\n  for (const key in styles) {\n    regStyles[key] = processor.compileStyleDeclaration(styles[key]);\n  }\n  return regStyles;\n}\n\n// Specificity hierarchy, in descending order:\n// 1. Inline styles\n// 2. ID (idsStyles)\n// 3. Classes (classesStyles)\n// 4. Element name (tagsStyles)\n// 5. Attribute styles (styles derived from attributes)\n// 6. Default element styles\n// 7. Inherited styles (baseFontStyles)\nexport class TStylesMerger {\n  private processor: CSSProcessor;\n  private tagsStyles: Record<string, CSSProcessedProps>;\n  private classesStyles: Record<string, CSSProcessedProps>;\n  private idsStyles: Record<string, CSSProcessedProps>;\n  private enableCSSInlineProcessing: boolean;\n  private enableUserAgentStyles: boolean;\n  private modelRegistry: HTMLModelRegistry<string>;\n  constructor(\n    config: Required<StylesConfig>,\n    modelRegistry: HTMLModelRegistry<string>,\n    cssProcessorConfig?: CSSProcessorConfig\n  ) {\n    this.processor = new CSSProcessor(cssProcessorConfig);\n    this.modelRegistry = modelRegistry;\n    this.classesStyles = mapMixedStyleRecordToCSSProcessedPropsReg(\n      this.processor,\n      config.classesStyles\n    );\n    this.tagsStyles = mapMixedStyleRecordToCSSProcessedPropsReg(\n      this.processor,\n      config.tagsStyles\n    );\n    this.idsStyles = mapMixedStyleRecordToCSSProcessedPropsReg(\n      this.processor,\n      config.idsStyles\n    );\n    this.enableCSSInlineProcessing = config.enableCSSInlineProcessing;\n    this.enableUserAgentStyles = config.enableUserAgentStyles;\n  }\n\n  compileInlineCSS(inlineCSS: string) {\n    return this.processor.compileInlineCSS(inlineCSS);\n  }\n\n  compileStyleDeclaration(styleDeclaration: MixedStyleDeclaration) {\n    return this.processor.compileStyleDeclaration(styleDeclaration);\n  }\n\n  buildStyles(\n    inlineStyle: string,\n    parentStyles: TStyles | null,\n    descriptor: TNodeDescriptor\n  ): TStyles {\n    const ownInlinePropsReg =\n      this.enableCSSInlineProcessing && inlineStyle\n        ? this.compileInlineCSS(inlineStyle)\n        : null;\n    const model = descriptor.tagName\n      ? this.modelRegistry.getElementModelFromTagName(descriptor.tagName)\n      : null;\n    const userTagOwnProps =\n      this.tagsStyles[descriptor.tagName as string] ?? null;\n    const userIdOwnProps = this.idsStyles[descriptor.id as string] ?? null;\n    const classes = descriptor.classes;\n    const userClassesOwnPropsList = classes.map(\n      (c) => this.classesStyles[c] || null\n    );\n    const dynamicPropsFromAttributes = this.enableUserAgentStyles\n      ? (model?.getMixedUAStyles?.(descriptor, descriptor.domNode!) || null) ??\n        model?.getUADerivedStyleFromAttributes?.(\n          descriptor.attributes,\n          descriptor.markers\n        ) ??\n        null\n      : null;\n    const userAgentTagProps = this.enableUserAgentStyles\n      ? model?.mixedUAStyles ?? null\n      : null;\n    // Latest properties will override former properties.\n    const mergedOwnProps = emptyProcessedPropsReg.merge(\n      userAgentTagProps &&\n        this.processor.compileStyleDeclaration(userAgentTagProps),\n      dynamicPropsFromAttributes &&\n        this.processor.compileStyleDeclaration(dynamicPropsFromAttributes),\n      userTagOwnProps,\n      ...userClassesOwnPropsList,\n      userIdOwnProps,\n      ownInlinePropsReg\n    );\n    return new TStyles(mergedOwnProps, parentStyles);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}