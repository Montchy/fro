{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { Children, Fragment } from 'react';\nimport MarkedListItem from './MarkedListItem';\nimport useMarkedList from './useMarkedList';\n/**\n * A component which given a counter style, wraps each of its children with a\n * {@link MarkedListItem}. The latter prepends the child with a marker\n * box containing a marker string representation for this child index.\n *\n * See {@link https://www.w3.org/TR/css-lists-3/#markers | CSS Lists and Counters Module Level 3, Markers}.\n *\n * @public\n */\n\nexport default function MarkedList({\n  children,\n  Container = Fragment,\n  ...props\n}) {\n  const normalChildren = Children.toArray(children);\n  const listProps = useMarkedList({\n    ...props,\n    length: normalChildren.length\n  });\n  return /*#__PURE__*/React.createElement(Container, {}, normalChildren.map((child, index) => {\n    return /*#__PURE__*/React.createElement(MarkedListItem, _extends({\n      key: index,\n      index: index\n    }, listProps), child);\n  }));\n}","map":{"version":3,"names":["React","Children","Fragment","MarkedListItem","useMarkedList","MarkedList","children","Container","props","normalChildren","toArray","listProps","length","createElement","map","child","index","_extends","key"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/@jsamr/react-native-li/lib/module/MarkedList.tsx"],"sourcesContent":["import React, { Children, Fragment, PropsWithChildren } from 'react';\nimport MarkedListItem from './MarkedListItem';\nimport { MarkedListProps } from './shared-types';\nimport useMarkedList from './useMarkedList';\n\n/**\n * A component which given a counter style, wraps each of its children with a\n * {@link MarkedListItem}. The latter prepends the child with a marker\n * box containing a marker string representation for this child index.\n *\n * See {@link https://www.w3.org/TR/css-lists-3/#markers | CSS Lists and Counters Module Level 3, Markers}.\n *\n * @public\n */\nexport default function MarkedList({\n  children,\n  Container = Fragment,\n  ...props\n}: PropsWithChildren<MarkedListProps>) {\n  const normalChildren = Children.toArray(children);\n  const listProps = useMarkedList({ ...props, length: normalChildren.length });\n  return React.createElement(\n    Container,\n    {},\n    normalChildren.map((child, index) => {\n      return (\n        <MarkedListItem key={index} index={index} {...listProps}>\n          {child}\n        </MarkedListItem>\n      );\n    })\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA6D,OAA7D;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,UAATA,CAAoB;EACjCC,QADiC;EAEjCC,SAAS,GAAGL,QAFqB;EAGjC,GAAGM;AAH8B,CAApB,EAIwB;EACrC,MAAMC,cAAc,GAAGR,QAAQ,CAACS,OAAT,CAAiBJ,QAAjB,CAAvB;EACA,MAAMK,SAAS,GAAGP,aAAa,CAAC;IAAE,GAAGI,KAAL;IAAYI,MAAM,EAAEH,cAAc,CAACG;EAAnC,CAAD,CAA/B;EACA,oBAAOZ,KAAK,CAACa,aAAN,CACLN,SADK,EAEL,EAFK,EAGLE,cAAc,CAACK,GAAf,CAAmB,CAACC,KAAD,EAAQC,KAAR,KAAkB;IACnC,oBACEhB,KAAA,CAAAa,aAAA,CAACV,cAAD,EAAAc,QAAA;MAAgBC,GAAG,EAAEF,KAArB;MAA4BA,KAAK,EAAEA;IAAnC,GAA8CL,SAA9C,GACGI,KADH,CADF;EAKD,CAND,CAHK,CAAP;AAWD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}