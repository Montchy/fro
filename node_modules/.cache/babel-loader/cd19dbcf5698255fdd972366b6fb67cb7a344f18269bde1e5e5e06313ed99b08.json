{"ast":null,"code":"var _jsxFileName = \"/Users/amelieploil/Desktop/Displomtest/Kinsky-Fe/kinskyfe/src/Components/AlwaysActive/LeftBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftBar = () => {\n  _s();\n  // Array of hover states for each button\n  const [hoverStates, setHoverStates] = useState([false, false, false]);\n\n  // Function to handle hover state change\n  const handleHover = (index, isHovered) => {\n    const updatedStates = [...hoverStates];\n    updatedStates[index] = isHovered;\n    setHoverStates(updatedStates);\n  };\n\n  // Sample button labels (can be modified as needed)\n  const buttons = ['Button 1', 'Button 2', 'Button 3'];\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: buttons.map((buttonLabel, index) => /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n      style: [styles.buttons, hoverStates[index] && styles.hoveredButton],\n      onPressIn: () => handleHover(index, true),\n      onPressOut: () => handleHover(index, false),\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(LeftBar, \"G7o6fgskYV6qkb1wWZ7S6IIcO44=\");\n_c = LeftBar;\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'top',\n    alignItems: 'center',\n    width: 80,\n    backgroundColor: 'rgba(250,228,181,1)',\n    height: 900\n  },\n  buttons: {\n    padding: 10,\n    marginBottom: 10,\n    // Add some space between buttons\n    backgroundColor: 'transparent' // Default background\n  },\n  hoveredButton: {\n    backgroundColor: 'rgba(246,203,108,1)' // Hover effect background\n  }\n});\nexport default LeftBar;\nvar _c;\n$RefreshReg$(_c, \"LeftBar\");","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","jsxDEV","_jsxDEV","LeftBar","_s","hoverStates","setHoverStates","handleHover","index","isHovered","updatedStates","buttons","style","styles","container","children","map","buttonLabel","hoveredButton","onPressIn","onPressOut","fileName","_jsxFileName","lineNumber","columnNumber","_c","create","flexDirection","justifyContent","alignItems","width","backgroundColor","height","padding","marginBottom","$RefreshReg$"],"sources":["/Users/amelieploil/Desktop/Displomtest/Kinsky-Fe/kinskyfe/src/Components/AlwaysActive/LeftBar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst LeftBar = () => {\n    // Array of hover states for each button\n    const [hoverStates, setHoverStates] = useState([false, false, false]);\n\n    // Function to handle hover state change\n    const handleHover = (index, isHovered) => {\n        const updatedStates = [...hoverStates];\n        updatedStates[index] = isHovered;\n        setHoverStates(updatedStates);\n    };\n\n    // Sample button labels (can be modified as needed)\n    const buttons = ['Button 1', 'Button 2', 'Button 3'];\n\n    return (\n        <View style={styles.container}>\n            {buttons.map((buttonLabel, index) => (\n                <TouchableOpacity\n                    key={index}\n                    style={[styles.buttons, hoverStates[index] && styles.hoveredButton]}\n                    onPressIn={() => handleHover(index, true)}\n                    onPressOut={() => handleHover(index, false)}\n\n                >\n                    <Text>{buttonLabel}</Text>\n                </TouchableOpacity>\n            ))}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'column',\n        justifyContent: 'top',\n        alignItems: 'center',\n        width: 80,\n        backgroundColor: 'rgba(250,228,181,1)',\n        height: 900,\n    },\n    buttons: {\n        padding: 10,\n        marginBottom: 10, // Add some space between buttons\n        backgroundColor: 'transparent', // Default background\n    },\n    hoveredButton: {\n        backgroundColor: 'rgba(246,203,108,1)', // Hover effect background\n    },\n});\n\nexport default LeftBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,IAAI,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;;EAErE;EACA,MAAMW,WAAW,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;IACtC,MAAMC,aAAa,GAAG,CAAC,GAAGL,WAAW,CAAC;IACtCK,aAAa,CAACF,KAAK,CAAC,GAAGC,SAAS;IAChCH,cAAc,CAACI,aAAa,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;EAEpD,oBACIT,OAAA,CAACL,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EACzBJ,OAAO,CAACK,GAAG,CAAC,CAACC,WAAW,EAAET,KAAK,kBAC5BN,OAAA,CAACH,gBAAgB;MAEba,KAAK,EAAE,CAACC,MAAM,CAACF,OAAO,EAAEN,WAAW,CAACG,KAAK,CAAC,IAAIK,MAAM,CAACK,aAAa,CAAE;MACpEC,SAAS,EAAEA,CAAA,KAAMZ,WAAW,CAACC,KAAK,EAAE,IAAI,CAAE;MAC1CY,UAAU,EAAEA,CAAA,KAAMb,WAAW,CAACC,KAAK,EAAE,KAAK,CAAE;MAAAO,QAAA,eAG5Cb,OAAA,CAACJ,IAAI;QAAAiB,QAAA,EAAEE;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC,GANrBhB,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOI,CACrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAACpB,EAAA,CA7BID,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AA+Bb,MAAMU,MAAM,GAAGb,UAAU,CAAC0B,MAAM,CAAC;EAC7BZ,SAAS,EAAE;IACPa,aAAa,EAAE,QAAQ;IACvBC,cAAc,EAAE,KAAK;IACrBC,UAAU,EAAE,QAAQ;IACpBC,KAAK,EAAE,EAAE;IACTC,eAAe,EAAE,qBAAqB;IACtCC,MAAM,EAAE;EACZ,CAAC;EACDrB,OAAO,EAAE;IACLsB,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAAE;IAClBH,eAAe,EAAE,aAAa,CAAE;EACpC,CAAC;EACDb,aAAa,EAAE;IACXa,eAAe,EAAE,qBAAqB,CAAE;EAC5C;AACJ,CAAC,CAAC;AAEF,eAAe5B,OAAO;AAAC,IAAAsB,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}