{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIMGElementStateWithCache;\nvar _defaultInitialImageDimensions = _interopRequireDefault(require(\"./defaultInitialImageDimensions\"));\nvar _getIMGState = require(\"./getIMGState\");\nvar _useImageConcreteDimensions = _interopRequireDefault(require(\"./useImageConcreteDimensions\"));\nvar _useImageSpecifiedDimensions = _interopRequireDefault(require(\"./useImageSpecifiedDimensions\"));\nvar _useIMGNormalizedSource = _interopRequireDefault(require(\"./useIMGNormalizedSource\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * This hook is useful when one has access to image natural dimensions prior to\n * loading. The `cachedNaturalDimensions` prop must be passed to immediately\n * compute concrete dimensions.\n */\nfunction useIMGElementStateWithCache(props) {\n  const {\n    alt,\n    altColor,\n    source,\n    contentWidth,\n    computeMaxWidth,\n    objectFit,\n    initialDimensions = _defaultInitialImageDimensions.default,\n    cachedNaturalDimensions\n  } = props;\n  const {\n    flatStyle,\n    specifiedDimensions\n  } = (0, _useImageSpecifiedDimensions.default)(props);\n  const nomalizedSource = (0, _useIMGNormalizedSource.default)({\n    specifiedDimensions,\n    source\n  });\n  const concreteDimensions = (0, _useImageConcreteDimensions.default)({\n    flatStyle,\n    naturalDimensions: cachedNaturalDimensions,\n    specifiedDimensions,\n    computeMaxWidth,\n    contentWidth\n  });\n  return (0, _getIMGState.getIMGState)({\n    error: null,\n    concreteDimensions,\n    containerStyle: flatStyle,\n    initialDimensions,\n    objectFit,\n    source: nomalizedSource,\n    alt,\n    altColor\n  });\n}","map":{"version":3,"names":["_defaultInitialImageDimensions","_interopRequireDefault","require","_getIMGState","_useImageConcreteDimensions","_useImageSpecifiedDimensions","_useIMGNormalizedSource","useIMGElementStateWithCache","props","alt","altColor","source","contentWidth","computeMaxWidth","objectFit","initialDimensions","default","cachedNaturalDimensions","flatStyle","specifiedDimensions","nomalizedSource","concreteDimensions","naturalDimensions","getIMGState","error","containerStyle"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/react-native-render-html/lib/commonjs/elements/useIMGElementStateWithCache.ts"],"sourcesContent":["import defaultImageInitialDimensions from './defaultInitialImageDimensions';\nimport { getIMGState } from './getIMGState';\nimport type {\n  UseIMGElementStateWithCacheProps,\n  IMGElementStateError,\n  IMGElementStateSuccess\n} from './img-types';\nimport useImageConcreteDimensions from './useImageConcreteDimensions';\nimport useImageSpecifiedDimensions from './useImageSpecifiedDimensions';\nimport useIMGNormalizedSource from './useIMGNormalizedSource';\n\n/**\n * This hook is useful when one has access to image natural dimensions prior to\n * loading. The `cachedNaturalDimensions` prop must be passed to immediately\n * compute concrete dimensions.\n */\nexport default function useIMGElementStateWithCache(\n  props: UseIMGElementStateWithCacheProps\n): IMGElementStateError | IMGElementStateSuccess {\n  const {\n    alt,\n    altColor,\n    source,\n    contentWidth,\n    computeMaxWidth,\n    objectFit,\n    initialDimensions = defaultImageInitialDimensions,\n    cachedNaturalDimensions\n  } = props;\n  const { flatStyle, specifiedDimensions } = useImageSpecifiedDimensions(props);\n  const nomalizedSource = useIMGNormalizedSource({\n    specifiedDimensions,\n    source\n  });\n  const concreteDimensions = useImageConcreteDimensions({\n    flatStyle,\n    naturalDimensions: cachedNaturalDimensions,\n    specifiedDimensions,\n    computeMaxWidth,\n    contentWidth\n  });\n\n  return getIMGState({\n    error: null,\n    concreteDimensions,\n    containerStyle: flatStyle,\n    initialDimensions,\n    objectFit,\n    source: nomalizedSource,\n    alt,\n    altColor\n  });\n}\n"],"mappings":";;;;;;AAAA,IAAAA,8BAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAMA,IAAAE,2BAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,4BAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,uBAAA,GAAAL,sBAAA,CAAAC,OAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACe,SAASK,2BAATA,CACbC,KADa,EAEkC;EAC/C,MAAM;IACJC,GADI;IAEJC,QAFI;IAGJC,MAHI;IAIJC,YAJI;IAKJC,eALI;IAMJC,SANI;IAOJC,iBAAiB,GAAGf,8BAAA,CAAAgB,OAPhB;IAQJC;EARI,IASFT,KATJ;EAUA,MAAM;IAAEU,SAAF;IAAaC;EAAb,IAAqC,IAAAd,4BAAA,CAAAW,OAAA,EAA4BR,KAA5B,CAA3C;EACA,MAAMY,eAAe,GAAG,IAAAd,uBAAA,CAAAU,OAAA,EAAuB;IAC7CG,mBAD6C;IAE7CR;EAF6C,CAAvB,CAAxB;EAIA,MAAMU,kBAAkB,GAAG,IAAAjB,2BAAA,CAAAY,OAAA,EAA2B;IACpDE,SADoD;IAEpDI,iBAAiB,EAAEL,uBAFiC;IAGpDE,mBAHoD;IAIpDN,eAJoD;IAKpDD;EALoD,CAA3B,CAA3B;EAQA,OAAO,IAAAT,YAAA,CAAAoB,WAAA,EAAY;IACjBC,KAAK,EAAE,IADU;IAEjBH,kBAFiB;IAGjBI,cAAc,EAAEP,SAHC;IAIjBH,iBAJiB;IAKjBD,SALiB;IAMjBH,MAAM,EAAES,eANS;IAOjBX,GAPiB;IAQjBC;EARiB,CAAZ,CAAP;AAUD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}