{"ast":null,"code":"function randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\nconst people = [];\n(function generatePersonData() {\n  const currentYear = new Date().getFullYear();\n  for (let i = 1; i <= 1000; i++) {\n    const age = randomIntFromInterval(18, 80);\n    const birthYear = currentYear - age;\n    const birthMonth = randomIntFromInterval(1, 12);\n    const birthDay = randomIntFromInterval(1, new Date(birthYear, birthMonth, 0).getDate());\n    const birthDate = new Date(birthYear, birthMonth - 1, birthDay).toISOString().split('T')[0];\n    people.push({\n      id: i,\n      age: age,\n      birthDate: birthDate\n    });\n  }\n})();\nconsole.log(people);\nexport { people };","map":{"version":3,"names":["randomIntFromInterval","min","max","Math","floor","random","people","generatePersonData","currentYear","Date","getFullYear","i","age","birthYear","birthMonth","birthDay","getDate","birthDate","toISOString","split","push","id","console","log"],"sources":["/Users/amelieploil/Desktop/Displomtest/Graphs /graphs/src/Graphs/DataList.js"],"sourcesContent":["function randomIntFromInterval(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nconst people = [];\n\n(function generatePersonData() {\n    const currentYear = new Date().getFullYear();\n\n    for (let i = 1; i <= 1000; i++) {\n        const age = randomIntFromInterval(18, 80);\n        const birthYear = currentYear - age;\n        const birthMonth = randomIntFromInterval(1, 12);\n        const birthDay = randomIntFromInterval(1, new Date(birthYear, birthMonth, 0).getDate());\n\n        const birthDate = new Date(birthYear, birthMonth - 1, birthDay).toISOString().split('T')[0];\n\n        people.push({\n            id: i,\n            age: age,\n            birthDate: birthDate\n        });\n    }\n})();\n\nconsole.log(people);\n\nexport { people };\n"],"mappings":"AAAA,SAASA,qBAAqBA,CAACC,GAAG,EAAEC,GAAG,EAAE;EACrC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC5D;AAEA,MAAMK,MAAM,GAAG,EAAE;AAEjB,CAAC,SAASC,kBAAkBA,CAAA,EAAG;EAC3B,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAE5C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,EAAEA,CAAC,EAAE,EAAE;IAC5B,MAAMC,GAAG,GAAGZ,qBAAqB,CAAC,EAAE,EAAE,EAAE,CAAC;IACzC,MAAMa,SAAS,GAAGL,WAAW,GAAGI,GAAG;IACnC,MAAME,UAAU,GAAGd,qBAAqB,CAAC,CAAC,EAAE,EAAE,CAAC;IAC/C,MAAMe,QAAQ,GAAGf,qBAAqB,CAAC,CAAC,EAAE,IAAIS,IAAI,CAACI,SAAS,EAAEC,UAAU,EAAE,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;IAEvF,MAAMC,SAAS,GAAG,IAAIR,IAAI,CAACI,SAAS,EAAEC,UAAU,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAE3Fb,MAAM,CAACc,IAAI,CAAC;MACRC,EAAE,EAAEV,CAAC;MACLC,GAAG,EAAEA,GAAG;MACRK,SAAS,EAAEA;IACf,CAAC,CAAC;EACN;AACJ,CAAC,EAAE,CAAC;AAEJK,OAAO,CAACC,GAAG,CAACjB,MAAM,CAAC;AAEnB,SAASA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}