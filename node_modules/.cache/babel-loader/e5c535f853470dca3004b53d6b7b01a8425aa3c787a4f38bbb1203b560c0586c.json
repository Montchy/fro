{"ast":null,"code":"var _jsxFileName = \"/Users/amelieploil/Desktop/Diploma/kinskyfe/src/Components/AlwaysActive/TopBar.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Image } from 'react-native';\nimport { useNavigate } from 'react-router-dom';\nimport cut from \"./images/cut.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopBar = ({\n  darkMode,\n  isEnglish\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const handleNavigation = route => {\n    navigate(route);\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: [styles.container, darkMode ? styles.darkContainer : styles.lightContainer],\n    children: [/*#__PURE__*/_jsxDEV(View, {\n      style: styles.titlev,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        style: [styles.iksk, darkMode ? styles.darkText : styles.lightText],\n        children: isEnglish ? \"Im Kinsky\" : \"Im Kinsky\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      style: styles.ocon,\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: {\n          paddingRight: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n          onPress: () => handleNavigation(\"/login\"),\n          children: /*#__PURE__*/_jsxDEV(View, {\n            style: {\n              flexDirection: \"row\",\n              alignItems: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              style: [styles.gr, darkMode ? styles.darkText : styles.lightText],\n              children: isEnglish ? \"Logged in as\" : \"Angemeldete Person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              style: styles.images,\n              source: cut\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(TopBar, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = TopBar;\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: 'center',\n    width: 1800,\n    height: 76,\n    borderBottomWidth: 1\n  },\n  lightContainer: {\n    backgroundColor: \"#FFFFFF\",\n    // Heller Modus\n    borderBottomColor: 'lightgray'\n  },\n  darkContainer: {\n    backgroundColor: \"rgb(18, 18, 18)\",\n    // Dark Mode Hintergrund\n    borderBottomColor: 'rgb(85, 129, 176)' // Dark Mode Akzentfarbe\n  },\n  titlev: {\n    paddingLeft: 30\n  },\n  iksk: {\n    fontSize: 25,\n    fontWeight: \"bold\"\n  },\n  gr: {\n    fontSize: 16\n  },\n  darkText: {\n    color: \"white\" // Dark Mode Textfarbe\n  },\n  lightText: {\n    color: \"black\" // Standardfarbe\n  },\n  ocon: {\n    paddingLeft: 1050,\n    alignItems: 'center',\n    flexDirection: \"row\"\n  },\n  images: {\n    width: 55,\n    height: 55,\n    tintColor: \"white\" // Damit das Icon im Dark Mode weiß bleibt\n  }\n});\nexport default TopBar;\nvar _c;\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"names":["React","View","Text","TouchableOpacity","StyleSheet","Image","useNavigate","cut","jsxDEV","_jsxDEV","TopBar","darkMode","isEnglish","_s","navigate","handleNavigation","route","style","styles","container","darkContainer","lightContainer","children","titlev","iksk","darkText","lightText","fileName","_jsxFileName","lineNumber","columnNumber","ocon","paddingRight","onPress","flexDirection","alignItems","gr","images","source","_c","create","width","height","borderBottomWidth","backgroundColor","borderBottomColor","paddingLeft","fontSize","fontWeight","color","tintColor","$RefreshReg$"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/src/Components/AlwaysActive/TopBar.jsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Image } from 'react-native';\nimport { useNavigate } from 'react-router-dom';\nimport cut from \"./images/cut.png\";\n\nconst TopBar = ({ darkMode, isEnglish }) => {\n    const navigate = useNavigate();\n\n    const handleNavigation = (route) => {\n        navigate(route);\n    };\n\n    return (\n        <View style={[styles.container, darkMode ? styles.darkContainer : styles.lightContainer]}>\n            <View style={styles.titlev}>\n                <Text style={[styles.iksk, darkMode ? styles.darkText : styles.lightText]}>\n                    {isEnglish ? \"Im Kinsky\" : \"Im Kinsky\"}\n                </Text>\n            </View>\n            <View style={styles.ocon}>\n                <View style={{ paddingRight: 10 }}>\n                    <TouchableOpacity onPress={() => handleNavigation(\"/login\")}>\n                        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                            <Text style={[styles.gr, darkMode ? styles.darkText : styles.lightText]}>\n                                {isEnglish ? \"Logged in as\" : \"Angemeldete Person\"}\n                            </Text>\n                            <Image style={styles.images} source={cut} />\n                        </View>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: \"row\",\n        alignItems: 'center',\n        width: 1800,\n        height: 76,\n        borderBottomWidth: 1,\n    },\n    lightContainer: {\n        backgroundColor: \"#FFFFFF\", // Heller Modus\n        borderBottomColor: 'lightgray',\n    },\n    darkContainer: {\n        backgroundColor: \"rgb(18, 18, 18)\", // Dark Mode Hintergrund\n        borderBottomColor: 'rgb(85, 129, 176)', // Dark Mode Akzentfarbe\n    },\n    titlev: {\n        paddingLeft: 30,\n    },\n    iksk: {\n        fontSize: 25,\n        fontWeight: \"bold\",\n    },\n    gr: {\n        fontSize: 16,\n    },\n    darkText: {\n        color: \"white\", // Dark Mode Textfarbe\n    },\n    lightText: {\n        color: \"black\", // Standardfarbe\n    },\n    ocon: {\n        paddingLeft: 1050,\n        alignItems: 'center',\n        flexDirection: \"row\",\n    },\n    images: {\n        width: 55,\n        height: 55,\n        tintColor: \"white\", // Damit das Icon im Dark Mode weiß bleibt\n    },\n});\n\nexport default TopBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}