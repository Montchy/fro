{"ast":null,"code":"var _jsxFileName = \"/Users/amelieploil/Desktop/Diploma/kinskyfe/src/Components/Persons.jsx\";\nimport React from 'react';\nimport { View, Text, StyleSheet, ScrollView, Image } from 'react-native';\nimport Nutzer from \"./AlwaysActive/images/nutzer.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\n// Funktion, um zufällige Namen zu generieren\nconst generateRandomName = () => {\n  const firstNames = ['Max', 'Anna', 'Liam', 'Sophia', 'Noah', 'Emma', 'Oliver', 'Ava', 'Ethan', 'Isabella', 'Lucas', 'Mia', 'Mason', 'Charlotte', 'Logan', 'Amelia', 'James', 'Harper', 'Jackson', 'Evelyn'];\n  const lastNames = ['Müller', 'Schmidt', 'Schneider', 'Fischer', 'Weber', 'Meyer', 'Wagner', 'Becker', 'Hoffmann', 'Schulz', 'Richter', 'Klein', 'Wolf', 'Schwarz', 'Zimmermann', 'Braun', 'Krüger', 'Hofmann', 'Schmitz', 'Schulte'];\n  const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\n  const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\n  return {\n    firstName,\n    lastName\n  };\n};\n\n// Generiere die Personenliste\nconst personsList = Array.from({\n  length: 100\n}, () => generateRandomName());\nconst Persons = () => {\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: styles.welcomeText,\n      children: \"Personen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScrollView, {\n      contentContainerStyle: styles.scrollViewContent,\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: styles.personGrid,\n        children: personsList.map((person, index) => /*#__PURE__*/_jsxDEV(View, {\n          style: styles.personBox,\n          children: [/*#__PURE__*/_jsxDEV(View, {\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              style: styles.images,\n              source: Nutzer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(View, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              style: styles.personName,\n              children: person.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              style: styles.personName,\n              children: person.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_c = Persons;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  welcomeText: {\n    color: 'rgba(240,175,77,1)',\n    fontWeight: \"bold\",\n    fontSize: 50,\n    marginBottom: 20\n  },\n  scrollViewContent: {\n    alignItems: 'center'\n  },\n  personGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  personBox: {\n    width: '15%',\n    height: \"15%\",\n    borderWidth: 1,\n    borderColor: 'lightgray',\n    borderRadius: 5,\n    padding: 2,\n    marginBottom: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 100,\n    // Höhe der Boxen\n    margin: 1 // Abstand zwischen den Boxen\n  },\n  personName: {\n    fontSize: 18\n  },\n  images: {\n    width: 20,\n    height: 20\n  }\n});\nexport default Persons;\nvar _c;\n$RefreshReg$(_c, \"Persons\");","map":{"version":3,"names":["React","View","Text","StyleSheet","ScrollView","Image","Nutzer","jsxDEV","_jsxDEV","generateRandomName","firstNames","lastNames","firstName","Math","floor","random","length","lastName","personsList","Array","from","Persons","style","styles","container","children","welcomeText","fileName","_jsxFileName","lineNumber","columnNumber","contentContainerStyle","scrollViewContent","personGrid","map","person","index","personBox","images","source","personName","_c","create","flex","padding","backgroundColor","alignItems","color","fontWeight","fontSize","marginBottom","flexDirection","flexWrap","justifyContent","width","height","borderWidth","borderColor","borderRadius","margin","$RefreshReg$"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/src/Components/Persons.jsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, ScrollView, Image } from 'react-native';\nimport Nutzer from \"./AlwaysActive/images/nutzer.png\";;\n\n// Funktion, um zufällige Namen zu generieren\nconst generateRandomName = () => {\n    const firstNames = [\n        'Max', 'Anna', 'Liam', 'Sophia', 'Noah', 'Emma', 'Oliver', 'Ava', \n        'Ethan', 'Isabella', 'Lucas', 'Mia', 'Mason', 'Charlotte', 'Logan', \n        'Amelia', 'James', 'Harper', 'Jackson', 'Evelyn'\n    ];\n\n    const lastNames = [\n        'Müller', 'Schmidt', 'Schneider', 'Fischer', 'Weber', \n        'Meyer', 'Wagner', 'Becker', 'Hoffmann', 'Schulz', \n        'Richter', 'Klein', 'Wolf', 'Schwarz', 'Zimmermann',\n        'Braun', 'Krüger', 'Hofmann', 'Schmitz', 'Schulte'\n    ];\n\n    const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\n    const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\n\n    return { firstName, lastName };\n};\n\n// Generiere die Personenliste\nconst personsList = Array.from({ length: 100 }, () => generateRandomName());\n\nconst Persons = () => {\n    return (\n        <View style={styles.container}>\n            <Text style={styles.welcomeText}>Personen</Text>\n            \n            {/* ScrollView für Personenliste */}\n            <ScrollView contentContainerStyle={styles.scrollViewContent}>\n                <View style={styles.personGrid}>\n                    {personsList.map((person, index) => (\n                        <View key={index} style={styles.personBox}>\n                            <View>\n                            <Image style={styles.images} source={Nutzer} />\n                            </View>\n                            <View>\n                            <Text style={styles.personName}>{person.firstName}</Text>\n                            <Text style={styles.personName}>{person.lastName}</Text>\n                        </View>\n                        </View>\n                    ))}\n                </View>\n            </ScrollView>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n    },\n    welcomeText: {\n        color: 'rgba(240,175,77,1)',\n        fontWeight: \"bold\",\n        fontSize: 50,\n        marginBottom: 20,\n    },\n    scrollViewContent: {\n        alignItems: 'center',\n    },\n    personGrid: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    personBox: {\n        width: '15%',\n        height: \"15%\",\n        borderWidth: 1,\n        borderColor: 'lightgray',\n        borderRadius: 5,\n        padding: 2,\n        marginBottom: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: 100,  // Höhe der Boxen\n        margin: 1,    // Abstand zwischen den Boxen\n    },\n    personName: {\n        fontSize: 18,\n    },\n    images: {\n        width: 20,\n        height: 20,\n    },\n});\n\nexport default Persons;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}