{"ast":null,"code":"var _jsxFileName = \"/Users/amelieploil/Desktop/Diploma/kinskyfe/src/Components/Settings.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { View, Text, StyleSheet, Switch, TextInput, TouchableOpacity } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = ({\n  darkMode,\n  setDarkMode,\n  isEnglish,\n  setEnglish\n}) => {\n  _s();\n  const [username, setUsername] = React.useState('JohnDoe');\n  const [email, setEmail] = React.useState('john.doe@example.com');\n  const [notificationsEnabled, setNotificationsEnabled] = React.useState(true);\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: [styles.container, darkMode ? styles.darkContainer : styles.lightContainer],\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: [styles.title, darkMode ? styles.darkText : styles.lightText],\n      children: isEnglish ? \"Settings\" : \"Einstellungen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      style: styles.settingRow,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: [styles.label, darkMode ? styles.darkText : styles.lightText],\n        children: isEnglish ? \"Username:\" : \"Benutzername:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        style: [styles.input, darkMode ? styles.darkInput : styles.lightInput],\n        value: username,\n        onChangeText: setUsername,\n        placeholder: isEnglish ? \"Enter username\" : \"Benutzername eingeben\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      style: styles.settingRow,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: [styles.label, darkMode ? styles.darkText : styles.lightText],\n        children: isEnglish ? \"E-Mail:\" : \"E-Mail:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        style: [styles.input, darkMode ? styles.darkInput : styles.lightInput],\n        value: email,\n        onChangeText: setEmail,\n        placeholder: isEnglish ? \"Enter email\" : \"E-Mail eingeben\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      style: styles.settingRow,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: [styles.label, darkMode ? styles.darkText : styles.lightText],\n        children: isEnglish ? \"Enable Notifications:\" : \"Benachrichtigungen aktivieren:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        value: notificationsEnabled,\n        onValueChange: setNotificationsEnabled,\n        thumbColor: darkMode ? \"#f5dd4b\" : \"#f4f3f4\",\n        trackColor: {\n          false: \"#767577\",\n          true: \"#81b0ff\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      style: styles.settingRow,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: [styles.label, darkMode ? styles.darkText : styles.lightText],\n        children: isEnglish ? \"Dark Mode:\" : \"Dunkelmodus:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        value: darkMode,\n        onValueChange: setDarkMode // Jetzt wird Dark Mode von App.js gesteuert\n        ,\n        thumbColor: darkMode ? \"#f5dd4b\" : \"#f4f3f4\",\n        trackColor: {\n          false: \"#767577\",\n          true: \"#81b0ff\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      style: styles.settingRow,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: [styles.label, darkMode ? styles.darkText : styles.lightText],\n        children: isEnglish ? \"Language:\" : \"Sprache:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n        style: [styles.languageButton, darkMode ? styles.darkButton : styles.lightButton],\n        onPress: () => setEnglish(prev => !prev),\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          style: darkMode ? styles.darkButtonText : styles.lightButtonText,\n          children: isEnglish ? \"Switch to German\" : \"Wechsel zu Englisch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(Settings, \"qgW4UmMScjMGbBWz3mVvWh7ADwQ=\");\n_c = Settings;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  lightContainer: {\n    backgroundColor: '#fff'\n  },\n  darkContainer: {\n    backgroundColor: '#121212'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  lightText: {\n    color: '#000'\n  },\n  darkText: {\n    color: '#fff'\n  },\n  settingRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 8,\n    width: '60%'\n  },\n  lightInput: {\n    backgroundColor: '#fff',\n    color: '#000'\n  },\n  darkInput: {\n    backgroundColor: '#333',\n    color: '#fff'\n  },\n  languageButton: {\n    padding: 10,\n    borderRadius: 5\n  },\n  lightButton: {\n    backgroundColor: '#007BFF'\n  },\n  darkButton: {\n    backgroundColor: '#1E90FF'\n  },\n  lightButtonText: {\n    color: '#fff'\n  },\n  darkButtonText: {\n    color: '#fff'\n  }\n});\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","View","Text","StyleSheet","Switch","TextInput","TouchableOpacity","jsxDEV","_jsxDEV","Settings","darkMode","setDarkMode","isEnglish","setEnglish","_s","username","setUsername","useState","email","setEmail","notificationsEnabled","setNotificationsEnabled","style","styles","container","darkContainer","lightContainer","children","title","darkText","lightText","fileName","_jsxFileName","lineNumber","columnNumber","settingRow","label","input","darkInput","lightInput","value","onChangeText","placeholder","onValueChange","thumbColor","trackColor","false","true","languageButton","darkButton","lightButton","onPress","prev","darkButtonText","lightButtonText","_c","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","color","flexDirection","justifyContent","alignItems","borderWidth","borderColor","borderRadius","width","$RefreshReg$"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/src/Components/Settings.jsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Switch, TextInput, TouchableOpacity } from 'react-native';\n\nconst Settings = ({ darkMode, setDarkMode, isEnglish, setEnglish }) => {\n    const [username, setUsername] = React.useState('JohnDoe');\n    const [email, setEmail] = React.useState('john.doe@example.com');\n    const [notificationsEnabled, setNotificationsEnabled] = React.useState(true);\n\n    return (\n        <View style={[styles.container, darkMode ? styles.darkContainer : styles.lightContainer]}>\n            <Text style={[styles.title, darkMode ? styles.darkText : styles.lightText]}>\n                {isEnglish ? \"Settings\" : \"Einstellungen\"}\n            </Text>\n\n            {/* Benutzername */}\n            <View style={styles.settingRow}>\n                <Text style={[styles.label, darkMode ? styles.darkText : styles.lightText]}>\n                    {isEnglish ? \"Username:\" : \"Benutzername:\"}\n                </Text>\n                <TextInput\n                    style={[styles.input, darkMode ? styles.darkInput : styles.lightInput]}\n                    value={username}\n                    onChangeText={setUsername}\n                    placeholder={isEnglish ? \"Enter username\" : \"Benutzername eingeben\"}\n                />\n            </View>\n\n            {/* E-Mail */}\n            <View style={styles.settingRow}>\n                <Text style={[styles.label, darkMode ? styles.darkText : styles.lightText]}>\n                    {isEnglish ? \"E-Mail:\" : \"E-Mail:\"}\n                </Text>\n                <TextInput\n                    style={[styles.input, darkMode ? styles.darkInput : styles.lightInput]}\n                    value={email}\n                    onChangeText={setEmail}\n                    placeholder={isEnglish ? \"Enter email\" : \"E-Mail eingeben\"}\n                />\n            </View>\n\n            {/* Benachrichtigungen */}\n            <View style={styles.settingRow}>\n                <Text style={[styles.label, darkMode ? styles.darkText : styles.lightText]}>\n                    {isEnglish ? \"Enable Notifications:\" : \"Benachrichtigungen aktivieren:\"}\n                </Text>\n                <Switch\n                    value={notificationsEnabled}\n                    onValueChange={setNotificationsEnabled}\n                    thumbColor={darkMode ? \"#f5dd4b\" : \"#f4f3f4\"}\n                    trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n                />\n            </View>\n\n            {/* Dark Mode Toggle */}\n            <View style={styles.settingRow}>\n                <Text style={[styles.label, darkMode ? styles.darkText : styles.lightText]}>\n                    {isEnglish ? \"Dark Mode:\" : \"Dunkelmodus:\"}\n                </Text>\n                <Switch\n                    value={darkMode}\n                    onValueChange={setDarkMode}  // Jetzt wird Dark Mode von App.js gesteuert\n                    thumbColor={darkMode ? \"#f5dd4b\" : \"#f4f3f4\"}\n                    trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n                />\n            </View>\n\n            {/* Sprachumschaltung */}\n            <View style={styles.settingRow}>\n                <Text style={[styles.label, darkMode ? styles.darkText : styles.lightText]}>\n                    {isEnglish ? \"Language:\" : \"Sprache:\"}\n                </Text>\n                <TouchableOpacity\n                    style={[styles.languageButton, darkMode ? styles.darkButton : styles.lightButton]}\n                    onPress={() => setEnglish(prev => !prev)}\n                >\n                    <Text style={darkMode ? styles.darkButtonText : styles.lightButtonText}>\n                        {isEnglish ? \"Switch to German\" : \"Wechsel zu Englisch\"}\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: { flex: 1, padding: 20 },\n    lightContainer: { backgroundColor: '#fff' },\n    darkContainer: { backgroundColor: '#121212' },\n    title: { fontSize: 32, fontWeight: 'bold', marginBottom: 20 },\n    lightText: { color: '#000' },\n    darkText: { color: '#fff' },\n    settingRow: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 15 },\n    label: { fontSize: 16, fontWeight: 'bold' },\n    input: { borderWidth: 1, borderColor: '#ccc', borderRadius: 5, padding: 8, width: '60%' },\n    lightInput: { backgroundColor: '#fff', color: '#000' },\n    darkInput: { backgroundColor: '#333', color: '#fff' },\n    languageButton: { padding: 10, borderRadius: 5 },\n    lightButton: { backgroundColor: '#007BFF' },\n    darkButton: { backgroundColor: '#1E90FF' },\n    lightButtonText: { color: '#fff' },\n    darkButtonText: { color: '#fff' },\n});\n\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}