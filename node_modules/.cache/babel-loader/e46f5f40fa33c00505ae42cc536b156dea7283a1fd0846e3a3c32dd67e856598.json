{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LongFontSizeCSSValidator = void 0;\nvar _helpers = require(\"../helpers\");\nvar _LongSizeCSSPropertyValidator = require(\"./LongSizeCSSPropertyValidator\");\nclass LongFontSizeCSSValidator extends _LongSizeCSSPropertyValidator.LongSizeCSSPropertyValidator {\n  computeSize(value, unit) {\n    if (unit === '%') {\n      return this.computeEmSize(value / 100);\n    }\n    return super.computeSize(value, unit);\n  }\n  normalizeRawInlineCSSValue(value) {\n    if ((0, _helpers.lookupRecord)(this.config.absoluteFontSizesPixelMap, value)) {\n      return this.config.absoluteFontSizesPixelMap[value];\n    }\n    if ((0, _helpers.lookupRecord)(this.config.relativeFontSizesCoefficientMap, value)) {\n      return this.computeEmSize(this.config.relativeFontSizesCoefficientMap[value]);\n    }\n    return super.normalizeRawInlineCSSValue(value);\n  }\n  normalizeNativeValue(value) {\n    return this.normalizeInlineCSSValue(value);\n  }\n}\nexports.LongFontSizeCSSValidator = LongFontSizeCSSValidator;","map":{"version":3,"names":["_helpers","require","_LongSizeCSSPropertyValidator","LongFontSizeCSSValidator","LongSizeCSSPropertyValidator","computeSize","value","unit","computeEmSize","normalizeRawInlineCSSValue","lookupRecord","config","absoluteFontSizesPixelMap","relativeFontSizesCoefficientMap","normalizeNativeValue","normalizeInlineCSSValue"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/@native-html/css-processor/lib/commonjs/validators/LongFontSizeCSSValidator.ts"],"sourcesContent":["import { CSSLengthUnit } from '../config';\nimport { lookupRecord } from '../helpers';\nimport { LongSizeCSSPropertyValidator } from './LongSizeCSSPropertyValidator';\nimport { CSSPropertyModel } from './types';\n\nexport class LongFontSizeCSSValidator<\n  C extends CSSPropertyModel\n> extends LongSizeCSSPropertyValidator<C> {\n  protected computeSize(value: number, unit: CSSLengthUnit) {\n    if (unit === '%') {\n      return this.computeEmSize(value / 100);\n    }\n    return super.computeSize(value, unit);\n  }\n\n  normalizeRawInlineCSSValue(value: string) {\n    if (lookupRecord(this.config.absoluteFontSizesPixelMap, value)) {\n      return this.config.absoluteFontSizesPixelMap[value];\n    }\n    if (lookupRecord(this.config.relativeFontSizesCoefficientMap, value)) {\n      return this.computeEmSize(\n        this.config.relativeFontSizesCoefficientMap[value]\n      );\n    }\n    return super.normalizeRawInlineCSSValue(value);\n  }\n\n  normalizeNativeValue(value: string | number) {\n    return this.normalizeInlineCSSValue(value);\n  }\n}\n"],"mappings":";;;;;;AACA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,6BAAA,GAAAD,OAAA;AAGO,MAAME,wBAAN,SAEGD,6BAAA,CAAAE,4BAFH,CAEmC;EAC9BC,WAAWA,CAACC,KAAD,EAAgBC,IAAhB,EAAqC;IACxD,IAAIA,IAAI,KAAK,GAAb,EAAkB;MAChB,OAAO,KAAKC,aAAL,CAAmBF,KAAK,GAAG,GAA3B,CAAP;IACD;IACD,OAAO,MAAMD,WAAN,CAAkBC,KAAlB,EAAyBC,IAAzB,CAAP;EACD;EAEDE,0BAA0BA,CAACH,KAAD,EAAgB;IACxC,IAAI,IAAAN,QAAA,CAAAU,YAAA,EAAa,KAAKC,MAAL,CAAYC,yBAAzB,EAAoDN,KAApD,CAAJ,EAAgE;MAC9D,OAAO,KAAKK,MAAL,CAAYC,yBAAZ,CAAsCN,KAAtC,CAAP;IACD;IACD,IAAI,IAAAN,QAAA,CAAAU,YAAA,EAAa,KAAKC,MAAL,CAAYE,+BAAzB,EAA0DP,KAA1D,CAAJ,EAAsE;MACpE,OAAO,KAAKE,aAAL,CACL,KAAKG,MAAL,CAAYE,+BAAZ,CAA4CP,KAA5C,CADK,CAAP;IAGD;IACD,OAAO,MAAMG,0BAAN,CAAiCH,KAAjC,CAAP;EACD;EAEDQ,oBAAoBA,CAACR,KAAD,EAAyB;IAC3C,OAAO,KAAKS,uBAAL,CAA6BT,KAA7B,CAAP;EACD;AAtBuC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}