{"ast":null,"code":"var _jsxFileName = \"/Users/amelieploil/Desktop/Diploma/kinskyfe/src/Components/Persons.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput, ScrollView } from 'react-native';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchAllPersons } from '../Application/personService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Persons = () => {\n  _s();\n  const [persons, setPersons] = useState([]);\n  const [filteredPersons, setFilteredPersons] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const loadPersons = async () => {\n      try {\n        const allPersons = await fetchAllPersons();\n        setPersons(allPersons);\n        setFilteredPersons(allPersons);\n      } catch (err) {\n        console.error('Fehler beim Laden der Personen:', err);\n      }\n    };\n    loadPersons();\n  }, []);\n  useEffect(() => {\n    const filterPersons = () => {\n      const lowercasedText = searchText.toLowerCase();\n      setFilteredPersons(persons.filter(person => person.vorname.toLowerCase().includes(lowercasedText) || person.nachname.toLowerCase().includes(lowercasedText)));\n    };\n    filterPersons();\n  }, [searchText, persons]);\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      style: styles.searchBar,\n      placeholder: \"Suche Personen\",\n      value: searchText,\n      onChangeText: setSearchText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScrollView, {\n      children: filteredPersons.map(person => /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n        style: styles.personCard,\n        onPress: () => navigate(`/person/${person.personenNr}`),\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.personName,\n          children: [person.vorname, \" \", person.nachname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.personDetail,\n          children: person.typ\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, person.personenNr, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Persons, \"+OlqIfB5vYdSXwGCdRiMaLSrgs8=\", false, function () {\n  return [useNavigate];\n});\n_c = Persons;\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  searchBar: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 20\n  },\n  personCard: {\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd'\n  },\n  personName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  personDetail: {\n    fontSize: 14,\n    color: '#666'\n  }\n});\nexport default Persons;\nvar _c;\n$RefreshReg$(_c, \"Persons\");","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","TouchableOpacity","TextInput","ScrollView","useNavigate","fetchAllPersons","jsxDEV","_jsxDEV","Persons","_s","persons","setPersons","filteredPersons","setFilteredPersons","searchText","setSearchText","navigate","loadPersons","allPersons","err","console","error","filterPersons","lowercasedText","toLowerCase","filter","person","vorname","includes","nachname","style","styles","container","children","searchBar","placeholder","value","onChangeText","fileName","_jsxFileName","lineNumber","columnNumber","map","personCard","onPress","personenNr","personName","personDetail","typ","_c","create","padding","backgroundColor","borderWidth","borderColor","borderRadius","marginBottom","borderBottomWidth","borderBottomColor","fontSize","fontWeight","color","$RefreshReg$"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/src/Components/Persons.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput, ScrollView } from 'react-native';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchAllPersons } from '../Application/personService';\n\nconst Persons = () => {\n    const [persons, setPersons] = useState([]);\n    const [filteredPersons, setFilteredPersons] = useState([]);\n    const [searchText, setSearchText] = useState('');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const loadPersons = async () => {\n            try {\n                const allPersons = await fetchAllPersons();\n                setPersons(allPersons);\n                setFilteredPersons(allPersons);\n            } catch (err) {\n                console.error('Fehler beim Laden der Personen:', err);\n            }\n        };\n\n        loadPersons();\n    }, []);\n\n    useEffect(() => {\n        const filterPersons = () => {\n            const lowercasedText = searchText.toLowerCase();\n            setFilteredPersons(\n                persons.filter(\n                    (person) =>\n                        person.vorname.toLowerCase().includes(lowercasedText) ||\n                        person.nachname.toLowerCase().includes(lowercasedText)\n                )\n            );\n        };\n\n        filterPersons();\n    }, [searchText, persons]);\n\n    return (\n        <View style={styles.container}>\n            <TextInput\n                style={styles.searchBar}\n                placeholder=\"Suche Personen\"\n                value={searchText}\n                onChangeText={setSearchText}\n            />\n            <ScrollView>\n                {filteredPersons.map((person) => (\n                    <TouchableOpacity\n                        key={person.personenNr}\n                        style={styles.personCard}\n                        onPress={() => navigate(`/person/${person.personenNr}`)}\n                    >\n                        <Text style={styles.personName}>{person.vorname} {person.nachname}</Text>\n                        <Text style={styles.personDetail}>{person.typ}</Text>\n                    </TouchableOpacity>\n                ))}\n            </ScrollView>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: { padding: 20, backgroundColor: '#fff' },\n    searchBar: { borderWidth: 1, borderColor: '#ccc', borderRadius: 5, padding: 10, marginBottom: 20 },\n    personCard: { padding: 15, borderBottomWidth: 1, borderBottomColor: '#ddd' },\n    personName: { fontSize: 18, fontWeight: 'bold', color: '#333' },\n    personDetail: { fontSize: 14, color: '#666' },\n});\n\nexport default Persons;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}