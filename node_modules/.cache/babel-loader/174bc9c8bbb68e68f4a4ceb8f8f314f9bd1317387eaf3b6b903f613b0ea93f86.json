{"ast":null,"code":"import React,{useState}from'react';import{View,Text,TouchableOpacity,StyleSheet,TextInput,Switch}from'react-native';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=_ref=>{let{setLogin}=_ref;const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[rememberMe,setRememberMe]=useState(false);const handleLogin=()=>{// Hier sollte die Login-Logik erfolgen\nif(email&&password){setLogin(true);// Beispiel: Setze Login-Status auf true nach erfolgreichem Login\n}};const handleSkipLogin=()=>{setLogin(true);// Setze fLogin auf true beim \"Skip Login temp\"\n};return/*#__PURE__*/_jsx(View,{style:styles.container,children:/*#__PURE__*/_jsxs(View,{style:styles.border,children:[/*#__PURE__*/_jsx(View,{style:styles.header,children:/*#__PURE__*/_jsx(Text,{style:styles.title,children:\"Anmelden\"})}),/*#__PURE__*/_jsxs(View,{style:styles.inputContainer,children:[/*#__PURE__*/_jsx(Text,{style:styles.label,children:\"Email\"}),/*#__PURE__*/_jsx(TextInput,{style:styles.input,placeholder:\"Email eingeben\",value:email,onChangeText:setEmail,keyboardType:\"email-address\"})]}),/*#__PURE__*/_jsxs(View,{style:styles.inputContainer,children:[/*#__PURE__*/_jsx(Text,{style:styles.label,children:\"Passwort\"}),/*#__PURE__*/_jsx(TextInput,{style:styles.input,placeholder:\"Passwort eingeben\",value:password,onChangeText:setPassword,secureTextEntry:true// Versteckt die Eingabe des Passworts\n})]}),/*#__PURE__*/_jsx(TouchableOpacity,{style:styles.loginButton,onPress:handleLogin,children:/*#__PURE__*/_jsx(Text,{style:styles.loginButtonText,children:\"Login\"})}),/*#__PURE__*/_jsxs(View,{style:styles.rememberMeContainer,children:[/*#__PURE__*/_jsx(Switch,{value:rememberMe,onValueChange:setRememberMe}),/*#__PURE__*/_jsx(Text,{style:styles.label,children:\" Remember me\"})]}),/*#__PURE__*/_jsx(TouchableOpacity,{onPress:handleSkipLogin,style:styles.skipButton,children:/*#__PURE__*/_jsx(Text,{style:styles.skipButtonText,children:\"Skip Login temp\"})})]})});};const styles=StyleSheet.create({container:{flex:1,justifyContent:'center',alignItems:'center',marginTop:150},border:{backgroundColor:'#fff',padding:30,borderRadius:10,shadowColor:'#000',shadowOffset:{width:0,height:2},shadowOpacity:0.25,shadowRadius:3.84,elevation:5,width:350},header:{alignItems:'center',marginBottom:20},title:{fontSize:24,fontWeight:'bold',color:'rgba(240,175,77,1)'},inputContainer:{marginBottom:20},label:{fontSize:13,marginBottom:5,color:\"grey\"},input:{borderWidth:1,borderColor:'lightgray',borderRadius:5,padding:10,fontSize:16},rememberMeContainer:{flexDirection:'row',alignItems:'center',marginBottom:20,marginTop:10},loginButton:{backgroundColor:'#f0af4d',padding:15,borderRadius:5,alignItems:'center'},loginButtonText:{color:'#fff',fontSize:16,fontWeight:'bold'},skipButton:{marginTop:20,padding:10,backgroundColor:'lightgray',borderRadius:5,alignItems:'center'},skipButtonText:{color:'#333',fontSize:14}});export default Login;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","TextInput","Switch","jsx","_jsx","jsxs","_jsxs","Login","_ref","setLogin","email","setEmail","password","setPassword","rememberMe","setRememberMe","handleLogin","handleSkipLogin","style","styles","container","children","border","header","title","inputContainer","label","input","placeholder","value","onChangeText","keyboardType","secureTextEntry","loginButton","onPress","loginButtonText","rememberMeContainer","onValueChange","skipButton","skipButtonText","create","flex","justifyContent","alignItems","marginTop","backgroundColor","padding","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginBottom","fontSize","fontWeight","color","borderWidth","borderColor","flexDirection"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/src/Components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, TextInput, Switch } from 'react-native';\n\nconst Login = ({ setLogin }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [rememberMe, setRememberMe] = useState(false);\n\n    const handleLogin = () => {\n        // Hier sollte die Login-Logik erfolgen\n        if (email && password) {\n            setLogin(true); // Beispiel: Setze Login-Status auf true nach erfolgreichem Login\n        }\n    };\n\n    const handleSkipLogin = () => {\n        setLogin(true); // Setze fLogin auf true beim \"Skip Login temp\"\n    };\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.border}>\n                <View style={styles.header}>\n                    <Text style={styles.title}>Anmelden</Text>\n                </View>\n\n                <View style={styles.inputContainer}>\n                    <Text style={styles.label}>Email</Text>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Email eingeben\"\n                        value={email}\n                        onChangeText={setEmail}\n                        keyboardType=\"email-address\"\n                    />\n                </View>\n\n                <View style={styles.inputContainer}>\n                    <Text style={styles.label}>Passwort</Text>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Passwort eingeben\"\n                        value={password}\n                        onChangeText={setPassword}\n                        secureTextEntry={true} // Versteckt die Eingabe des Passworts\n                    />\n                </View>\n\n                <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\n                    <Text style={styles.loginButtonText}>Login</Text>\n                </TouchableOpacity>\n\n                <View style={styles.rememberMeContainer}>\n                    <Switch\n                        value={rememberMe}\n                        onValueChange={setRememberMe}\n                    />\n                    <Text style={styles.label}> Remember me</Text>\n                </View>\n\n                {/* Skip Login temp button */}\n                <TouchableOpacity onPress={handleSkipLogin} style={styles.skipButton}>\n                    <Text style={styles.skipButtonText}>Skip Login temp</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 150,\n    },\n    border: {\n        backgroundColor: '#fff',\n        padding: 30,\n        borderRadius: 10,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5,\n        width: 350,\n    },\n    header: {\n        alignItems: 'center',\n        marginBottom: 20,\n    },\n    title: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: 'rgba(240,175,77,1)',\n    },\n    inputContainer: {\n        marginBottom: 20,\n    },\n    label: {\n        fontSize: 13,\n        marginBottom: 5,\n        color: \"grey\",\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: 'lightgray',\n        borderRadius: 5,\n        padding: 10,\n        fontSize: 16,\n    },\n    rememberMeContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 20,\n        marginTop: 10,\n    },\n    loginButton: {\n        backgroundColor: '#f0af4d',\n        padding: 15,\n        borderRadius: 5,\n        alignItems: 'center',\n    },\n    loginButtonText: {\n        color: '#fff',\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n    skipButton: {\n        marginTop: 20,\n        padding: 10,\n        backgroundColor: 'lightgray',\n        borderRadius: 5,\n        alignItems: 'center',\n    },\n    skipButtonText: {\n        color: '#333',\n        fontSize: 14,\n    },\n});\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}