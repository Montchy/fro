{"ast":null,"code":"var _jsxFileName = \"/Users/amelieploil/Desktop/Diploma/kinskyfe/src/Components/AlwaysActive/LeftBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { View, TouchableOpacity, StyleSheet, Image } from 'react-native';\n\n// Import your image assets\nimport balk1 from \"./images/speisekarte.png\";\nimport lup2 from \"./images/suche.png\";\nimport haus3 from \"./images/haus.png\";\nimport user4 from \"./images/nutzer.png\";\nimport bild5 from \"./images/galerie.png\";\nimport auk6 from \"./images/richter.png\";\nimport setting7 from \"./images/die-einstellungen.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftBar = () => {\n  _s();\n  // Individual hover states for each button\n  const [hoveredIndex, setHoveredIndex] = useState(null);\n  const buttons = [balk1, lup2, haus3, user4, bild5, auk6];\n  const handleMouseEnter = index => {\n    setHoveredIndex(index); // Set only the current button as hovered\n  };\n  const handleMouseLeave = () => {\n    setHoveredIndex(null); // Reset hover state when leaving\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(View, {\n      children: buttons.map((buttonLabel, index) => /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n        style: [styles.buttons, hoveredIndex === index && styles.hoveredButton // Apply hover style only if it's the hovered button\n        ],\n        onMouseEnter: () => handleMouseEnter(index),\n        onMouseLeave: handleMouseLeave,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          style: styles.images,\n          source: buttonLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      style: styles.setdownview,\n      children: /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n        style: [styles.buttons, hoveredIndex === 6 && styles.hoveredButton // The last button\n        ],\n        onMouseEnter: () => handleMouseEnter(6),\n        onMouseLeave: handleMouseLeave,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          style: styles.images,\n          source: setting7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(LeftBar, \"9iVkaaUbrFxVCU6MuI1jK6905pI=\");\n_c = LeftBar;\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    width: 77,\n    backgroundColor: 'rgba(250,228,181,1)',\n    height: 900\n  },\n  buttons: {\n    padding: 25,\n    backgroundColor: 'transparent'\n  },\n  hoveredButton: {\n    backgroundColor: 'rgba(246,203,108,1)'\n  },\n  images: {\n    width: 25,\n    height: 25\n  },\n  setdownview: {\n    marginTop: 10\n  }\n});\nexport default LeftBar;\nvar _c;\n$RefreshReg$(_c, \"LeftBar\");","map":{"version":3,"names":["React","useState","View","TouchableOpacity","StyleSheet","Image","balk1","lup2","haus3","user4","bild5","auk6","setting7","jsxDEV","_jsxDEV","LeftBar","_s","hoveredIndex","setHoveredIndex","buttons","handleMouseEnter","index","handleMouseLeave","style","styles","container","children","map","buttonLabel","hoveredButton","onMouseEnter","onMouseLeave","images","source","fileName","_jsxFileName","lineNumber","columnNumber","setdownview","_c","create","flexDirection","justifyContent","alignItems","width","backgroundColor","height","padding","marginTop","$RefreshReg$"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/src/Components/AlwaysActive/LeftBar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TouchableOpacity, StyleSheet, Image } from 'react-native';\n\n// Import your image assets\nimport balk1 from \"./images/speisekarte.png\";\nimport lup2 from \"./images/suche.png\";\nimport haus3 from \"./images/haus.png\";\nimport user4 from \"./images/nutzer.png\";\nimport bild5 from \"./images/galerie.png\";\nimport auk6 from \"./images/richter.png\";\nimport setting7 from \"./images/die-einstellungen.png\";\n\nconst LeftBar = () => {\n    // Individual hover states for each button\n    const [hoveredIndex, setHoveredIndex] = useState(null);\n\n    const buttons = [balk1, lup2, haus3, user4, bild5, auk6];\n\n    const handleMouseEnter = (index) => {\n        setHoveredIndex(index); // Set only the current button as hovered\n    };\n\n    const handleMouseLeave = () => {\n        setHoveredIndex(null); // Reset hover state when leaving\n    };\n\n    return (\n        <View style={styles.container}>\n            <View>\n                {buttons.map((buttonLabel, index) => (\n                    <TouchableOpacity\n                        key={index}\n                        style={[\n                            styles.buttons,\n                            hoveredIndex === index && styles.hoveredButton, // Apply hover style only if it's the hovered button\n                        ]}\n                        onMouseEnter={() => handleMouseEnter(index)}\n                        onMouseLeave={handleMouseLeave}\n                    >\n                        <Image\n                            style={styles.images}\n                            source={buttonLabel}\n                        />\n                    </TouchableOpacity>\n                ))}\n            </View>\n            <View style={styles.setdownview}>\n                <TouchableOpacity\n                    style={[\n                        styles.buttons,\n                        hoveredIndex === 6 && styles.hoveredButton, // The last button\n                    ]}\n                    onMouseEnter={() => handleMouseEnter(6)}\n                    onMouseLeave={handleMouseLeave}\n                >\n                    <Image\n                        style={styles.images}\n                        source={setting7}\n                    />\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        width: 77,\n        backgroundColor: 'rgba(250,228,181,1)',\n        height: 900,\n    },\n    buttons: {\n        padding: 25,\n        backgroundColor: 'transparent', \n    },\n    hoveredButton: {\n        backgroundColor: 'rgba(246,203,108,1)', \n    },\n    images: {\n        width: 25,\n        height: 25,\n    },\n    setdownview: {\n        marginTop: 10,\n    },\n});\n\nexport default LeftBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}