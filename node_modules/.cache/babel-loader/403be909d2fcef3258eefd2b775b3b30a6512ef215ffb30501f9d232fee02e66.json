{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _TStyles = require(\"../styles/TStyles\");\nvar _markersPrototype = _interopRequireDefault(require(\"./markersPrototype\"));\nvar _tnodeSnapshot = _interopRequireDefault(require(\"./tnodeSnapshot\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction updateNodeIndexes(node, i) {\n  node.nodeIndex = i;\n}\nconst emptyAttrs = Object.freeze({});\nconst emptyClasses = Object.freeze([]);\nfunction findNativeRole(ariaRole) {\n  if (ariaRole === 'img') {\n    return 'image';\n  }\n  if (ariaRole === 'heading') {\n    return 'header';\n  }\n  if (ariaRole === 'dialog') {\n    return 'alert';\n  }\n  if (ariaRole === 'presentation') {\n    return 'none';\n  }\n  if (ariaRole === 'button' || ariaRole === 'switch' || ariaRole === 'checkbox' || ariaRole === 'radio' || ariaRole === 'radiogroup' || ariaRole === 'link' || ariaRole === 'search') {\n    return ariaRole;\n  }\n}\nfunction setMarkersFromAttributes(targetMarkers, _parentMarkers, _ref) {\n  let {\n    attributes\n  } = _ref;\n  if ('dir' in attributes) {\n    targetMarkers.direction = attributes.dir;\n  }\n  if ('lang' in attributes) {\n    targetMarkers.lang = attributes.lang;\n  }\n}\nfunction transformPropsDefinitionsToSwitch(definition) {\n  if (!definition) {\n    return null;\n  }\n  return {\n    text: _objectSpread(_objectSpread({}, definition.native), definition.text),\n    view: _objectSpread(_objectSpread({}, definition.native), definition.view)\n  };\n}\nfunction mergeSwitches(prev, next) {\n  if (!prev) {\n    return next;\n  }\n  if (!next) {\n    return prev;\n  }\n  return {\n    text: _objectSpread(_objectSpread({}, prev.text), next.text),\n    view: _objectSpread(_objectSpread({}, prev.view), next.view)\n  };\n}\nconst prototype = {\n  children: Object.freeze([]),\n  init: Object.freeze({}),\n  classes: Object.freeze([]),\n  styles: Object.freeze(_TStyles.TStyles.empty()),\n  markers: _markersPrototype.default,\n  __nodeIndex: null,\n  __trimmedLeft: false,\n  __trimmedRight: false,\n  __nativeProps: false,\n  __nativeStyles: false,\n  __webStyles: false,\n  __generateNativePropsFromTNode() {\n    let ret = null;\n    if (this.styles.webTextFlow.userSelect) {\n      ret = mergeSwitches(ret, {\n        text: {\n          selectable: this.styles.webTextFlow.userSelect !== 'none'\n        }\n      });\n    }\n    if (this.attributes['aria-label']) {\n      const accessibilityProps = {\n        accessibilityLabel: this.attributes['aria-label']\n      };\n      ret = mergeSwitches(ret, {\n        view: accessibilityProps,\n        text: accessibilityProps\n      });\n    }\n    if (this.attributes.role) {\n      const role = this.attributes.role;\n      const accessibilityRole = findNativeRole(role);\n      if (accessibilityRole) {\n        const accessibilityProps = {\n          accessibilityRole: accessibilityRole\n        };\n        ret = mergeSwitches(ret, {\n          view: accessibilityProps,\n          text: accessibilityProps\n        });\n      }\n    }\n    return ret;\n  },\n  __generateDynamicNativePropsFromModel(autoGeneratedProps) {\n    const elm = this.elementModel;\n    if (!elm || !elm.getReactNativeProps) {\n      return null;\n    }\n    return transformPropsDefinitionsToSwitch(elm.getReactNativeProps(this, autoGeneratedProps, this.domNode) || null);\n  },\n  get attributes() {\n    var _this$domNode;\n    return ((_this$domNode = this.domNode) === null || _this$domNode === void 0 ? void 0 : _this$domNode.attribs) || emptyAttrs;\n  },\n  get hasWhiteSpaceCollapsingEnabled() {\n    return typeof this.styles.webTextFlow.whiteSpace === 'string' ? this.styles.webTextFlow.whiteSpace === 'normal' : true;\n  },\n  get contentModel() {\n    var _this$elementModel;\n    return ((_this$elementModel = this.elementModel) === null || _this$elementModel === void 0 ? void 0 : _this$elementModel.contentModel) || null;\n  },\n  get parentStyles() {\n    var _this$parent;\n    return this.init.parentStyles || ((_this$parent = this.parent) === null || _this$parent === void 0 ? void 0 : _this$parent.styles) || null;\n  },\n  get id() {\n    return this.attributes.id || null;\n  },\n  get domNode() {\n    return this.init.domNode || null;\n  },\n  get elementModel() {\n    return this.init.elementModel;\n  },\n  get tagName() {\n    var _this$init$domNode;\n    return ((_this$init$domNode = this.init.domNode) === null || _this$init$domNode === void 0 ? void 0 : _this$init$domNode.name) || null;\n  },\n  get parent() {\n    return this.init.parent || null;\n  },\n  get nodeIndex() {\n    if (this.__nodeIndex === null) {\n      this.__nodeIndex = this.init.nodeIndex || 0;\n    }\n    return this.__nodeIndex;\n  },\n  get isUnregistered() {\n    return this.init.isUnregistered || false;\n  },\n  set nodeIndex(nodeIndex) {\n    this.__nodeIndex = nodeIndex;\n  },\n  bindChildren(children) {\n    let shouldUpdateNodeIndexes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    //@ts-ignore\n    this.children = children;\n    if (shouldUpdateNodeIndexes) {\n      children.forEach(updateNodeIndexes);\n    }\n  },\n  cloneInitParams(partial) {\n    return Object.assign({}, this.init, partial);\n  },\n  isCollapsibleLeft() {\n    if (this.children.length) {\n      return this.hasWhiteSpaceCollapsingEnabled && this.children[0].isCollapsibleLeft();\n    }\n    return false;\n  },\n  isCollapsibleRight() {\n    if (this.children.length) {\n      return this.hasWhiteSpaceCollapsingEnabled && this.children[this.children.length - 1].isCollapsibleRight();\n    }\n    return false;\n  },\n  isEmpty() {\n    return false;\n  },\n  trimLeft() {\n    if (!this.__trimmedLeft && this.children.length) {\n      const firstChild = this.children[0];\n      firstChild.trimLeft();\n      if (firstChild.isEmpty()) {\n        //@ts-ignore\n        this.children.splice(0, 1);\n      }\n      this.__trimmedLeft = true;\n    }\n  },\n  trimRight() {\n    if (!this.__trimmedRight && this.children.length) {\n      const lastChild = this.children[this.children.length - 1];\n      lastChild.trimRight();\n      if (lastChild.isEmpty()) {\n        //@ts-ignore\n        this.children.splice(-1, 1);\n      }\n      this.__trimmedRight = true;\n    }\n  },\n  matchContentModel() {\n    return false;\n  },\n  spliceChildren(indexesToSplice) {\n    let offset = 0;\n    for (const i of indexesToSplice) {\n      //@ts-ignore\n      this.children.splice(i - offset, 1);\n      offset += 1;\n    }\n  },\n  collapse() {\n    this.collapseChildren();\n    this.bindChildren(this.children, true);\n  },\n  getNativeStyles() {\n    if (this.__nativeStyles === false) {\n      this.__nativeStyles = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, this.styles.nativeBlockFlow), this.styles.nativeBlockRet), this.styles.nativeTextFlow), this.styles.nativeTextRet);\n    }\n    return this.__nativeStyles;\n  },\n  getWebStyles() {\n    if (this.__webStyles === false) {\n      this.__webStyles = _objectSpread(_objectSpread({}, this.styles.webTextFlow), this.styles.webBlockRet);\n    }\n    return this.__webStyles;\n  },\n  collapseChildren() {\n    return;\n  },\n  snapshot() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      withStyles = false,\n      withNodeIndex = false\n    } = options;\n    return (0, _tnodeSnapshot.default)(this, {\n      withStyles,\n      withNodeIndex\n    });\n  },\n  hasClass(className) {\n    return this.classes.indexOf(className) > -1;\n  },\n  toString() {\n    return this.snapshot();\n  },\n  setMarkers(targetMarkers, parentMarkers) {\n    var _this$elementModel2, _this$init$context$se, _this$init$context;\n    if ((_this$elementModel2 = this.elementModel) !== null && _this$elementModel2 !== void 0 && _this$elementModel2.setMarkersForTNode) {\n      this.elementModel.setMarkersForTNode(targetMarkers, parentMarkers, this);\n    }\n    setMarkersFromAttributes(targetMarkers, parentMarkers, this);\n    (_this$init$context$se = (_this$init$context = this.init.context).setMarkersForTNode) === null || _this$init$context$se === void 0 ? void 0 : _this$init$context$se.call(_this$init$context, targetMarkers, parentMarkers, this);\n  },\n  getReactNativeProps() {\n    if (this.__nativeProps === false) {\n      var _this$elementModel3;\n      const staticFromModel = transformPropsDefinitionsToSwitch((_this$elementModel3 = this.elementModel) === null || _this$elementModel3 === void 0 ? void 0 : _this$elementModel3.reactNativeProps);\n      const dynamicFromAttrs = this.__generateNativePropsFromTNode();\n      const autoGeneratedProps = mergeSwitches(staticFromModel, dynamicFromAttrs);\n      const dynamicFromModel = this.__generateDynamicNativePropsFromModel(autoGeneratedProps);\n      this.__nativeProps = mergeSwitches(autoGeneratedProps, dynamicFromModel);\n    }\n    return this.__nativeProps;\n  },\n  initialize(init) {\n    var _this$attributes$clas;\n    this.init = init;\n    this.classes = ((_this$attributes$clas = this.attributes.class) === null || _this$attributes$clas === void 0 ? void 0 : _this$attributes$clas.split(/\\s+/)) || emptyClasses;\n    const parentMarkers = init.parent ? init.parent.markers : _markersPrototype.default.extend();\n    this.markers = parentMarkers.extend();\n    this.setMarkers(this.markers, parentMarkers, this); // Avoid very long prototype chains by assigning parent to current\n    // when current has no own properties\n\n    if (Object.keys(this.markers).length === 0) {\n      this.markers = parentMarkers;\n    }\n    this.styles = init.styles || init.context.stylesMerger.buildStyles(this.attributes.style, this.parentStyles || null, this);\n  }\n};\nconst TNodeCtor = function TNode(type, displayName, extraAccessors) {\n  this.type = type;\n  this.displayName = displayName;\n  extraAccessors && Object.defineProperties(this, extraAccessors);\n};\nTNodeCtor.prototype = prototype;\nvar _default = TNodeCtor;\nexports.default = _default;","map":{"version":3,"names":["_TStyles","require","_markersPrototype","_interopRequireDefault","_tnodeSnapshot","updateNodeIndexes","node","i","nodeIndex","emptyAttrs","Object","freeze","emptyClasses","findNativeRole","ariaRole","setMarkersFromAttributes","targetMarkers","_parentMarkers","_ref","attributes","direction","dir","lang","transformPropsDefinitionsToSwitch","definition","text","_objectSpread","native","view","mergeSwitches","prev","next","prototype","children","init","classes","styles","TStyles","empty","markers","default","__nodeIndex","__trimmedLeft","__trimmedRight","__nativeProps","__nativeStyles","__webStyles","__generateNativePropsFromTNode","ret","webTextFlow","userSelect","selectable","accessibilityProps","accessibilityLabel","role","accessibilityRole","__generateDynamicNativePropsFromModel","autoGeneratedProps","elm","elementModel","getReactNativeProps","domNode","_this$domNode","attribs","hasWhiteSpaceCollapsingEnabled","whiteSpace","contentModel","_this$elementModel","parentStyles","_this$parent","parent","id","tagName","_this$init$domNode","name","isUnregistered","bindChildren","shouldUpdateNodeIndexes","arguments","length","undefined","forEach","cloneInitParams","partial","assign","isCollapsibleLeft","isCollapsibleRight","isEmpty","trimLeft","firstChild","splice","trimRight","lastChild","matchContentModel","spliceChildren","indexesToSplice","offset","collapse","collapseChildren","getNativeStyles","nativeBlockFlow","nativeBlockRet","nativeTextFlow","nativeTextRet","getWebStyles","webBlockRet","snapshot","options","withStyles","withNodeIndex","hasClass","className","indexOf","toString","setMarkers","parentMarkers","_this$elementModel2","_this$init$context$se","_this$init$context","setMarkersForTNode","context","call","_this$elementModel3","staticFromModel","reactNativeProps","dynamicFromAttrs","dynamicFromModel","initialize","_this$attributes$clas","class","split","extend","keys","stylesMerger","buildStyles","style","TNodeCtor","TNode","type","displayName","extraAccessors","defineProperties"],"sources":["/Users/amelieploil/Desktop/Diploma/kinskyfe/node_modules/@native-html/transient-render-engine/lib/commonjs/tree/TNodeCtor.ts"],"sourcesContent":["import { AccessibilityProps, AccessibilityRole } from 'react-native';\nimport {\n  ReactNativePropsSwitch,\n  ReactNativePropsDefinitions\n} from '../helper-types';\nimport { TStyles } from '../styles/TStyles';\nimport markersPrototype from './markersPrototype';\nimport tnodeToString from './tnodeSnapshot';\nimport {\n  Markers,\n  TNodeDescriptor,\n  TNodeImpl,\n  TNodeInit,\n  TNodeType\n} from './tree-types';\n\nexport type GenericTNodeCtor<Init = TNodeInit, Impl = TNodeImpl> = {\n  new (init: Init): Impl;\n  prototype: Impl;\n};\n\nexport type Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\nfunction updateNodeIndexes(node: Mutable<TNodeImpl>, i: number) {\n  node.nodeIndex = i;\n}\n\nconst emptyAttrs = Object.freeze({});\nconst emptyClasses = Object.freeze([]);\n\nfunction findNativeRole(ariaRole: string): AccessibilityRole | undefined {\n  if (ariaRole === 'img') {\n    return 'image';\n  }\n  if (ariaRole === 'heading') {\n    return 'header';\n  }\n  if (ariaRole === 'dialog') {\n    return 'alert';\n  }\n  if (ariaRole === 'presentation') {\n    return 'none';\n  }\n  if (\n    ariaRole === 'button' ||\n    ariaRole === 'switch' ||\n    ariaRole === 'checkbox' ||\n    ariaRole === 'radio' ||\n    ariaRole === 'radiogroup' ||\n    ariaRole === 'link' ||\n    ariaRole === 'search'\n  ) {\n    return ariaRole;\n  }\n}\n\nfunction setMarkersFromAttributes(\n  targetMarkers: Markers,\n  _parentMarkers: Readonly<Markers>,\n  { attributes }: TNodeDescriptor\n): void {\n  if ('dir' in attributes) {\n    targetMarkers.direction = attributes.dir as 'rtl';\n  }\n  if ('lang' in attributes) {\n    targetMarkers.lang = attributes.lang;\n  }\n}\n\nfunction transformPropsDefinitionsToSwitch(\n  definition?: ReactNativePropsDefinitions | null\n): ReactNativePropsSwitch | null {\n  if (!definition) {\n    return null;\n  }\n  return {\n    text: {\n      ...definition.native,\n      ...definition.text\n    },\n    view: {\n      ...definition.native,\n      ...definition.view\n    }\n  };\n}\n\nfunction mergeSwitches(\n  prev: ReactNativePropsSwitch | null,\n  next: ReactNativePropsSwitch | null\n) {\n  if (!prev) {\n    return next;\n  }\n  if (!next) {\n    return prev;\n  }\n  return {\n    text: {\n      ...prev.text,\n      ...next.text\n    },\n    view: {\n      ...prev.view,\n      ...next.view\n    }\n  };\n}\n\nconst prototype: Omit<TNodeImpl, 'displayName' | 'type'> = {\n  children: Object.freeze([]) as any,\n  init: Object.freeze({}) as any,\n  classes: Object.freeze([]) as any,\n  styles: Object.freeze(TStyles.empty()) as any,\n  markers: markersPrototype,\n  __nodeIndex: null,\n  __trimmedLeft: false,\n  __trimmedRight: false,\n  __nativeProps: false,\n  __nativeStyles: false,\n  __webStyles: false,\n  __generateNativePropsFromTNode() {\n    let ret: ReactNativePropsSwitch | null = null;\n    if (this.styles.webTextFlow.userSelect) {\n      ret = mergeSwitches(ret, {\n        text: {\n          selectable: this.styles.webTextFlow.userSelect !== 'none'\n        }\n      });\n    }\n    if (this.attributes['aria-label']) {\n      const accessibilityProps: AccessibilityProps = {\n        accessibilityLabel: this.attributes['aria-label']\n      };\n      ret = mergeSwitches(ret, {\n        view: accessibilityProps,\n        text: accessibilityProps\n      });\n    }\n    if (this.attributes.role) {\n      const role = this.attributes.role;\n      const accessibilityRole = findNativeRole(role);\n      if (accessibilityRole) {\n        const accessibilityProps: AccessibilityProps = {\n          accessibilityRole: accessibilityRole\n        };\n        ret = mergeSwitches(ret, {\n          view: accessibilityProps,\n          text: accessibilityProps\n        });\n      }\n    }\n    return ret;\n  },\n\n  __generateDynamicNativePropsFromModel(autoGeneratedProps) {\n    const elm = this.elementModel;\n    if (!elm || !elm.getReactNativeProps) {\n      return null;\n    }\n    return transformPropsDefinitionsToSwitch(\n      elm.getReactNativeProps(this as any, autoGeneratedProps, this.domNode!) ||\n        null\n    );\n  },\n\n  get attributes() {\n    return this.domNode?.attribs || emptyAttrs;\n  },\n\n  get hasWhiteSpaceCollapsingEnabled() {\n    return typeof this.styles.webTextFlow.whiteSpace === 'string'\n      ? this.styles.webTextFlow.whiteSpace === 'normal'\n      : true;\n  },\n\n  get contentModel() {\n    return this.elementModel?.contentModel || null;\n  },\n\n  get parentStyles() {\n    return this.init.parentStyles || this.parent?.styles || null;\n  },\n\n  get id() {\n    return this.attributes.id || null;\n  },\n\n  get domNode() {\n    return this.init.domNode || null;\n  },\n\n  get elementModel() {\n    return this.init.elementModel;\n  },\n\n  get tagName() {\n    return this.init.domNode?.name || null;\n  },\n\n  get parent() {\n    return (this.init.parent as any) || null;\n  },\n\n  get nodeIndex() {\n    if (this.__nodeIndex === null) {\n      this.__nodeIndex = this.init.nodeIndex || 0;\n    }\n    return this.__nodeIndex;\n  },\n\n  get isUnregistered() {\n    return this.init.isUnregistered || false;\n  },\n\n  set nodeIndex(nodeIndex: number) {\n    this.__nodeIndex = nodeIndex;\n  },\n\n  bindChildren(children, shouldUpdateNodeIndexes = false) {\n    //@ts-ignore\n    this.children = children;\n    if (shouldUpdateNodeIndexes) {\n      children.forEach(updateNodeIndexes);\n    }\n  },\n\n  cloneInitParams(partial) {\n    return Object.assign({}, this.init, partial) as any;\n  },\n\n  isCollapsibleLeft() {\n    if (this.children.length) {\n      return (\n        this.hasWhiteSpaceCollapsingEnabled &&\n        this.children[0].isCollapsibleLeft()\n      );\n    }\n    return false;\n  },\n\n  isCollapsibleRight() {\n    if (this.children.length) {\n      return (\n        this.hasWhiteSpaceCollapsingEnabled &&\n        this.children[this.children.length - 1].isCollapsibleRight()\n      );\n    }\n    return false;\n  },\n\n  isEmpty() {\n    return false;\n  },\n\n  trimLeft() {\n    if (!this.__trimmedLeft && this.children.length) {\n      const firstChild = this.children[0];\n      firstChild.trimLeft();\n      if (firstChild.isEmpty()) {\n        //@ts-ignore\n        this.children.splice(0, 1);\n      }\n      this.__trimmedLeft = true;\n    }\n  },\n\n  trimRight() {\n    if (!this.__trimmedRight && this.children.length) {\n      const lastChild = this.children[this.children.length - 1];\n      lastChild.trimRight();\n      if (lastChild.isEmpty()) {\n        //@ts-ignore\n        this.children.splice(-1, 1);\n      }\n      this.__trimmedRight = true;\n    }\n  },\n\n  matchContentModel() {\n    return false;\n  },\n\n  spliceChildren(indexesToSplice) {\n    let offset = 0;\n    for (const i of indexesToSplice) {\n      //@ts-ignore\n      this.children.splice(i - offset, 1);\n      offset += 1;\n    }\n  },\n\n  collapse() {\n    this.collapseChildren();\n    this.bindChildren(this.children, true);\n  },\n\n  getNativeStyles() {\n    if (this.__nativeStyles === false) {\n      this.__nativeStyles = {\n        ...this.styles.nativeBlockFlow,\n        ...this.styles.nativeBlockRet,\n        ...this.styles.nativeTextFlow,\n        ...this.styles.nativeTextRet\n      };\n    }\n    return this.__nativeStyles;\n  },\n\n  getWebStyles() {\n    if (this.__webStyles === false) {\n      this.__webStyles = {\n        ...this.styles.webTextFlow,\n        ...this.styles.webBlockRet\n      } as ReturnType<TNodeImpl['getWebStyles']>;\n    }\n    return this.__webStyles;\n  },\n\n  collapseChildren() {\n    return;\n  },\n\n  snapshot(options = {}) {\n    const { withStyles = false, withNodeIndex = false } = options;\n    return tnodeToString(this as any, { withStyles, withNodeIndex });\n  },\n\n  hasClass(className) {\n    return this.classes.indexOf(className) > -1;\n  },\n\n  toString() {\n    return this.snapshot();\n  },\n\n  setMarkers(targetMarkers, parentMarkers) {\n    if (this.elementModel?.setMarkersForTNode) {\n      this.elementModel.setMarkersForTNode(targetMarkers, parentMarkers, this);\n    }\n    setMarkersFromAttributes(targetMarkers, parentMarkers, this);\n    this.init.context.setMarkersForTNode?.(targetMarkers, parentMarkers, this);\n  },\n\n  getReactNativeProps() {\n    if (this.__nativeProps === false) {\n      const staticFromModel = transformPropsDefinitionsToSwitch(\n        this.elementModel?.reactNativeProps\n      );\n      const dynamicFromAttrs = this.__generateNativePropsFromTNode();\n      const autoGeneratedProps = mergeSwitches(\n        staticFromModel,\n        dynamicFromAttrs\n      );\n      const dynamicFromModel =\n        this.__generateDynamicNativePropsFromModel(autoGeneratedProps);\n      this.__nativeProps = mergeSwitches(autoGeneratedProps, dynamicFromModel);\n    }\n    return this.__nativeProps;\n  },\n\n  initialize<Impl extends TNodeImpl<TNodeInit> = TNodeImpl>(\n    this: Mutable<Impl>,\n    init: Impl['init']\n  ) {\n    this.init = init;\n    this.classes = this.attributes.class?.split(/\\s+/) || emptyClasses;\n    const parentMarkers = init.parent\n      ? init.parent.markers\n      : markersPrototype.extend();\n    this.markers = parentMarkers.extend();\n    this.setMarkers(this.markers, parentMarkers, this);\n    // Avoid very long prototype chains by assigning parent to current\n    // when current has no own properties\n    if (Object.keys(this.markers).length === 0) {\n      this.markers = parentMarkers;\n    }\n    this.styles =\n      init.styles ||\n      init.context.stylesMerger.buildStyles(\n        this.attributes.style,\n        this.parentStyles || null,\n        this\n      );\n  }\n};\n\nconst TNodeCtor = function TNode<Impl extends TNodeImpl = TNodeImpl>(\n  this: Mutable<TNodeImpl>,\n  type: TNodeType,\n  displayName: string,\n  extraAccessors?: {\n    [k in Exclude<keyof Impl, keyof TNodeImpl>]: {\n      get: () => any;\n      set?: (val: any) => void;\n    };\n  }\n) {\n  this.type = type;\n  this.displayName = displayName;\n  extraAccessors && Object.defineProperties(this, extraAccessors);\n};\n\nTNodeCtor.prototype = prototype as any;\n\nexport default TNodeCtor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}